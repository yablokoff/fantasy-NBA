{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/constants/defaults.js","webpack:///./src/js/utils.js","webpack:///./src/js/storage/base.js","webpack:///./src/js/storage/cards.js","webpack:///./src/js/constants/ActionTypes.js","webpack:///./src/js/reducers/preloader.js","webpack:///./src/js/reducers/user.js","webpack:///./src/js/reducers/content.js","webpack:///./src/js/reducers/fetchedCards.js","webpack:///./src/js/reducers/cards.js","webpack:///./src/js/reducers/selectedCards.js","webpack:///./src/js/reducers/index.js","webpack:///./src/js/store/index.js","webpack:///./src/js/store/store.prod.js","webpack:///./src/js/store/store.dev.js","webpack:///./src/js/components/Preloader.js","webpack:///./src/js/storage/auth.js","webpack:///./src/js/constants/routes.js","webpack:///./src/js/components/PrivateRoute.js","webpack:///./src/js/actions/index.js","webpack:///./src/js/components/Page.js","webpack:///./src/js/components/MainList.js","webpack:///./src/js/components/MainEmpty.js","webpack:///./src/js/containers/MainPage.js","webpack:///./src/js/components/SplitText.js","webpack:///./src/js/components/LoginLabel.js","webpack:///./src/img/preview2.png","webpack:///./src/js/components/LoginPreview.js","webpack:///./src/js/components/LoginForm.js","webpack:///./src/js/components/LoginBottom.js","webpack:///./src/js/containers/LoginPage.js","webpack:///./src/js/components/ThanksLabel.js","webpack:///./src/js/components/ThanksText.js","webpack:///./src/js/components/ThanksCards.js","webpack:///./src/js/containers/ThanksPage.js","webpack:///./src/js/containers/Root.js","webpack:///./src/js/app.js","webpack:///./src/js/renderer.js","webpack:///./src/js/api.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","CARDS_SHOW_COUNT","CARDS_SELECT_COUNT","TIME_ZONE","STORAGE_DATE_FORMAT","randomInteger","min","max","rand","Math","random","floor","getRandomIntList","count","rangeMin","rangeMax","new_int","includes","loadImage","path","Promise","resolve","img","Image","onload","status","onerror","src","loadImages","sources","Error","all","map","createMarkup","html","__html","trim","Store","STORE_KEY","_formatting","set","json","JSON","stringify","this","localStorage","setItem","getItem","parse","err","_isValid","getOrInvalidate","clear","removeItem","dayjs","extend","utc","timezone","now","tz","FetchedCards","constructor","date","format","fetchedCards","SelectedCards","selected_ids","ts","card_ids","selectedCards","SHOW_PRELOADER","HIDE_PRELOADER","LOGIN","LOGIN_PENDING","ActionType","Pending","LOGIN_FULFILLED","Fulfilled","LOGIN_REJECTED","Rejected","LOAD_CONTENT","LOAD_CONTENT_PENDING","LOAD_CONTENT_FULFILLED","LOAD_CONTENT_REJECTED","LOAD_DAILY_PLAYERS","LOAD_DAILY_PLAYERS_PENDING","LOAD_DAILY_PLAYERS_FULFILLED","LOAD_DAILY_PLAYERS_REJECTED","LOAD_CARDS","LOAD_CARDS_PENDING","LOAD_CARDS_FULFILLED","LOAD_CARDS_REJECTED","SET_SELECTED_CARDS","SET_SELECTED_CARDS_PENDING","SET_SELECTED_CARDS_FULFILLED","SET_SELECTED_CARDS_REJECTED","initialState","show","isFetching","response","error","userReducer","state","action","type","ActionTypes","payload","login_label","login_text","login_consent","empty_page","cards_page_green","cards_page_gray","thanks_label","thanks_block_1","thanks_block_2","contentReducer","formattingContentResponse","ids","cards","cardsReducer","formattingCardsResponse","sort","a","b","indexOf","id","isSending","rootReducer","combineReducers","preloader","user","content","fetchedCardsIDs","formattedData","formattingDailyPlayersResponse","filtered_cards_ids","indexes","pd_ids","pd","card_id","filter","selectedCardsIDs","meta","require","store","createStore","applyMiddleware","promise","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Preloader","props","useSelector","className","xmlns","viewBox","preserveAspectRatio","cx","cy","fill","stroke","strokeWidth","transform","attributeName","repeatCount","dur","calcMode","keyTimes","keySplines","values","begin","getUser","isAuthenticated","PrivateRoute","Component","component","rest","render","to","pathname","routes","from","location","propTypes","PropTypes","elementType","isRequired","showPreloader","dispatch","getState","hidePreloader","loadCards","reject","join","axiosAPI","urls","params","filterByFormula","maxRecords","Page","useDispatch","useEffect","then","children","element","animationClasses","enter","enterActive","enterDone","exit","exitActive","exitDone","MainList","useState","showCards","setShowCards","fetched_ids","card","image_url","lastChoiceIndex","setLastChoiceIndex","Array","choicedCards","setChoicedCards","isFullSet","Boolean","classes","CSSTransition","in","timeout","classNames","unmountOnExit","onClick","currentSelectedCards","handlePersonClick","alt","dangerouslySetInnerHTML","event","bitmap","fetchedData","post","sets","fields","setCards","disabled","array","MainEmpty","duration","appear","onEntering","opacity","translateY","easing","MainPage","hasFetched","hasSelected","daily","SplitText","letters","text","split","letter","onEnterAnimation","onExiting","onExitAnimation","string","number","LoginLabel","translateX","el","index","offsetLeft","delay","anime","stagger","LoginPreview","preview","composeValidators","validators","reduce","validator","undefined","required","emailRegexp","match_email","match","instRegexp","match_inst","phoneRegexp","match_phone","normalizePhone","onlyNums","replace","WrappedField","input","placeholder","animationDelay","touched","invalid","LoginForm","next","history","useHistory","onSubmit","Email","email","Instagram","instagram","Phone","phone","users","user_id","handleSubmit","submitting","validate","rotateX","rotateY","rotateZ","oneOfType","LoginBottom","LoginPage","Fragment","ThanksLabel","title","ThanksText","ThanksCards","start","ThanksPage","Root","exact","document","getElementById","renderer","marked","Renderer","link","href","use","axios","baseURL","headers","Authorization","accept","records","dp","first_image","url"],"mappings":"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","file":"app-30573d65b67244b51e59.bundle.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([88,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export const CARDS_SHOW_COUNT = 5;\r\nexport const CARDS_SELECT_COUNT = 3;\r\n\r\nexport const TIME_ZONE = 'America/Los_Angeles';\r\nexport const QUERY_DATE_FORMAT = \"YYYY-MM-DD\";\r\nexport const STORAGE_DATE_FORMAT = \"YYYY-MM-DD\";\r\n","\r\n/**\r\n * Returns a random number between min (inclusive) and max (inclusive)\r\n */\r\nconst randomInteger = (min, max) => {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n};\r\n\r\nexport const getRandomIntList = ({ count=5, rangeMin=0, rangeMax=100 }) => {\r\n    let result = [];\r\n\r\n    while (result.length < count) {\r\n        const new_int = randomInteger(rangeMin, rangeMax);\r\n        if (!result.includes(new_int)) result.push(new_int);\r\n    }\r\n\r\n    return result\r\n};\r\n\r\n\r\n/**\r\n * Async img loading\r\n */\r\nconst loadImage = path =>\r\n    new Promise(resolve => {\r\n        const img = new Image();\r\n        img.onload = () => resolve({path, status: 'ok'});\r\n        img.onerror = () => resolve({path, status: 'error'});\r\n\r\n        img.src = path;\r\n    });\r\n\r\nexport const loadImages = sources => {\r\n    if (!sources || !sources.length) {\r\n        throw new Error('sources required');\r\n    }\r\n    return Promise.all(sources.map(loadImage));\r\n};\r\n\r\nexport function createMarkup(html) {\r\n  return ({ __html: html.trim() })\r\n}\r\n","\r\n/*\r\n    Базовый класс обёртки для storage.\r\n */\r\nexport const Store = function() {};\r\nStore.prototype.STORE_KEY = 'store_key';\r\n\r\n\r\n/*\r\n    Форматирование данных.\r\n */\r\nStore.prototype._formatting = function(data) {\r\n    return data;\r\n};\r\n\r\n\r\n/*\r\n    Сохранение в storage.\r\n */\r\nStore.prototype.set = function(data) {\r\n    const json = JSON.stringify(this._formatting(data));\r\n    localStorage.setItem(this.STORE_KEY, json);\r\n    return json;\r\n};\r\n\r\n\r\n/*\r\n    Получение данных из storage.\r\n */\r\nStore.prototype.get = function() {\r\n    let data;\r\n    const json = localStorage.getItem(this.STORE_KEY);\r\n    try {\r\n        data = JSON.parse(json);\r\n    } catch (err) {\r\n        data = null\r\n    }\r\n    return data;\r\n};\r\n\r\n/*\r\n    Инвалидация данных.\r\n */\r\nStore.prototype._isValid = function(data) {\r\n    return data\r\n};\r\n\r\n\r\n/*\r\n    Проверка на актуальность.\r\n */\r\nStore.prototype.getOrInvalidate = function() {\r\n     const data = this.get();\r\n    if (data) {\r\n        if (this._isValid(data)) {\r\n            return data;\r\n        } else {\r\n            this.clear();\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/*\r\n    Удаление из storage.\r\n */\r\nStore.prototype.clear = function() {\r\n    localStorage.removeItem(this.STORE_KEY);\r\n};\r\n","import dayjs from \"dayjs\";\r\nimport utc from \"dayjs/plugin/utc\";\r\nimport timezone from \"dayjs/plugin/timezone\";\r\n\r\nimport { Store } from \"./base\";\r\nimport { STORAGE_DATE_FORMAT, TIME_ZONE } from \"../constants/defaults\";\r\n\r\n\r\ndayjs.extend(utc);\r\ndayjs.extend(timezone);\r\n\r\n\r\nconst now = () => dayjs().tz(TIME_ZONE);\r\n\r\n\r\n// Класс который сохраняет предложенные пользователю карты.\r\nconst FetchedCards = function() {};\r\nFetchedCards.prototype = Object.create(Store.prototype);\r\nFetchedCards.prototype.constructor = Store;\r\n\r\nFetchedCards.prototype.STORE_KEY = 'fetched_cards';\r\n\r\nFetchedCards.prototype._formatting = function(data) {\r\n    return {\r\n        date: now().format(STORAGE_DATE_FORMAT),\r\n        ...data\r\n    };\r\n};\r\n\r\nFetchedCards.prototype._isValid = function(data) {\r\n    if (data.date === now().format(STORAGE_DATE_FORMAT)) {\r\n        return data;\r\n    }\r\n};\r\n\r\nexport const fetchedCards = new FetchedCards();\r\n\r\n\r\n// Класс который сохраняет выбранные пользователем карты.\r\nconst SelectedCards = function() {};\r\nSelectedCards.prototype = Object.create(Store.prototype);\r\nSelectedCards.prototype.constructor = Store;\r\n\r\nSelectedCards.prototype.STORE_KEY = 'selected_cards';\r\n\r\nSelectedCards.prototype._formatting = function({ selected_ids, ts }) {\r\n    const setDate = dayjs(ts).tz(TIME_ZONE);\r\n    return {\r\n        date: setDate.format(STORAGE_DATE_FORMAT),\r\n        card_ids: selected_ids,\r\n    };\r\n};\r\n\r\nSelectedCards.prototype._isValid = function(data) {\r\n    if (data.date === now().format(STORAGE_DATE_FORMAT)) {\r\n        return data;\r\n    }\r\n};\r\n\r\nexport const selectedCards = new SelectedCards();\r\n","import {ActionType} from 'redux-promise-middleware';\r\n\r\n\r\n// preloader\r\nexport const SHOW_PRELOADER = 'SHOW_PRELOADER';\r\nexport const HIDE_PRELOADER = 'HIDE_PRELOADER';\r\n\r\n// user\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGIN_PENDING = `LOGIN_${ActionType.Pending}`;\r\nexport const LOGIN_FULFILLED = `LOGIN_${ActionType.Fulfilled}`;\r\nexport const LOGIN_REJECTED = `LOGIN_${ActionType.Rejected}`;\r\n\r\n// content\r\nexport const LOAD_CONTENT = 'LOAD_CONTENT';\r\nexport const LOAD_CONTENT_PENDING = `LOAD_CONTENT_${ActionType.Pending}`;\r\nexport const LOAD_CONTENT_FULFILLED = `LOAD_CONTENT_${ActionType.Fulfilled}`;\r\nexport const LOAD_CONTENT_REJECTED = `LOAD_CONTENT_${ActionType.Rejected}`;\r\n\r\n// daily players\r\nexport const LOAD_DAILY_PLAYERS = 'LOAD_DAILY_PLAYERS';\r\nexport const LOAD_DAILY_PLAYERS_PENDING = `LOAD_DAILY_PLAYERS_${ActionType.Pending}`;\r\nexport const LOAD_DAILY_PLAYERS_FULFILLED = `LOAD_DAILY_PLAYERS_${ActionType.Fulfilled}`;\r\nexport const LOAD_DAILY_PLAYERS_REJECTED = `LOAD_DAILY_PLAYERS_${ActionType.Rejected}`;\r\n\r\n// cards\r\nexport const LOAD_CARDS = 'LOAD_CARDS';\r\nexport const LOAD_CARDS_PENDING = `LOAD_CARDS_${ActionType.Pending}`;\r\nexport const LOAD_CARDS_FULFILLED = `LOAD_CARDS_${ActionType.Fulfilled}`;\r\nexport const LOAD_CARDS_REJECTED = `LOAD_CARDS_${ActionType.Rejected}`;\r\n\r\n// set\r\nexport const SET_SELECTED_CARDS = 'SET_SELECTED_CARDS';\r\nexport const SET_SELECTED_CARDS_PENDING = `SET_SELECTED_CARDS_${ActionType.Pending}`;\r\nexport const SET_SELECTED_CARDS_FULFILLED = `SET_SELECTED_CARDS_${ActionType.Fulfilled}`;\r\nexport const SET_SELECTED_CARDS_REJECTED = `SET_SELECTED_CARDS_${ActionType.Rejected}`;\r\n\r\nexport const CLEAR_SELECTED_CARDS = 'CLEAR_SELECTED_CARDS';\r\n","import * as ActionTypes from \"../constants/ActionTypes\";\r\n\r\n\r\nconst initialState = {\r\n    show: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.SHOW_PRELOADER:\r\n            return { show: true };\r\n\r\n        case ActionTypes.HIDE_PRELOADER:\r\n            return { show: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as ActionTypes from \"../constants/ActionTypes\";\r\n\r\n\r\nconst initialState = {\r\n    isFetching: false,\r\n    response: null,\r\n    error: false\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOGIN_PENDING:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            };\r\n        case ActionTypes.LOGIN_REJECTED: {\r\n            const {data} = action.payload.response || {};\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                response: data,\r\n                error: true\r\n            };\r\n        }\r\n        case ActionTypes.LOGIN_FULFILLED:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                response: action.payload.data,\r\n                error: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userReducer;\r\n","import * as ActionTypes from \"../constants/ActionTypes\";\r\nimport { formattingContentResponse } from \"../api\";\r\n\r\n\r\nconst initialState = {\r\n    login_label: 'frank michael smith\\'s',\r\n    login_text: 'Free to enter. Winner receives $20.\\n' +\r\n        'The top 5 receive shoutouts and tags!',\r\n    login_consent: 'By participating, you consent to receive recurring autodialed SMS/MMS promotional messages. No purchase required. Msg&data rates may apply. Reply HELP for help, or STOP to end.',\r\n    empty_page: 'Hey! The contests are either live or unavailable today. Look out for updates on Frank\\'s Instagram.',\r\n    cards_page_green: 'most total pts\\nscored wins',\r\n    cards_page_gray: 'select 3\\n&\\u00A0discard 2',\r\n    thanks_label: 'thanks for entering',\r\n    thanks_block_1: 'winner announced\\n' +\r\n        'on frank`s instagram\\n' +\r\n        'story after the game',\r\n    thanks_block_2: 'must be following\\n' +\r\n        '@SBD_PLAY \\n' +\r\n        'on instagram to win',\r\n    isFetching: false,\r\n    response: null,\r\n    error: false\r\n};\r\n\r\nconst contentReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOAD_CONTENT_PENDING:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            };\r\n        case ActionTypes.LOAD_CONTENT_REJECTED: {\r\n            const { data } = action.payload.response || {};\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                response: data,\r\n                error: true\r\n            };\r\n        }\r\n        case ActionTypes.LOAD_CONTENT_FULFILLED: {\r\n            const data = action.payload.data;\r\n            const result = formattingContentResponse(data);\r\n            return {\r\n                ...result,\r\n                response: data,\r\n                isFetching: false,\r\n                error: false\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default contentReducer;\r\n","import * as ActionTypes from \"../constants/ActionTypes\";\r\nimport { formattingDailyPlayersResponse } from \"../api\";\r\nimport { getRandomIntList } from \"../utils\";\r\nimport { fetchedCards } from \"../storage/cards\";\r\nimport { CARDS_SHOW_COUNT } from \"../constants/defaults\";\r\n\r\n\r\nconst data = fetchedCards.getOrInvalidate();\r\nconst initialState = {\r\n    ids: data ? data.card_ids : [],\r\n    isFetching: false,\r\n    response: null,\r\n    error: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOAD_DAILY_PLAYERS_PENDING:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            };\r\n        case ActionTypes.LOAD_DAILY_PLAYERS_REJECTED: {\r\n            const { data } = action.payload.response || {};\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                response: data,\r\n                error: true\r\n            };\r\n        }\r\n        case ActionTypes.LOAD_DAILY_PLAYERS_FULFILLED: {\r\n            // полное говно, но отсюда удобнее всего сохранить в стораж\r\n            const formattedData = formattingDailyPlayersResponse(action.payload.data);\r\n\r\n            let filtered_cards_ids;\r\n            const count = formattedData.length;\r\n\r\n            if (count < CARDS_SHOW_COUNT) {\r\n                // случай захода на страницу во время заполнения таблицы\r\n                filtered_cards_ids = [];\r\n            } else {\r\n                const indexes = getRandomIntList({\r\n                    count: CARDS_SHOW_COUNT,\r\n                    rangeMin: 0,\r\n                    rangeMax: count - 1\r\n                });\r\n\r\n                const pd_ids = formattedData.map(pd => pd.id);\r\n                const cards_ids = formattedData.map(pd => pd.card_id);\r\n                filtered_cards_ids = cards_ids.filter((id, i) => indexes.includes(i));\r\n                fetchedCards.set({\r\n                    pd_ids: pd_ids.filter((id, i) => indexes.includes(i)),\r\n                    card_ids: filtered_cards_ids,\r\n                });\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ids: filtered_cards_ids,\r\n                isFetching: false,\r\n                error: false\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as ActionTypes from \"../constants/ActionTypes\";\r\nimport { formattingCardsResponse } from \"../api\";\r\nimport { fetchedCards } from \"../storage/cards\";\r\n\r\n\r\nconst initialState = {\r\n    cards: [],\r\n    isFetching: false,\r\n    response: null,\r\n    error: false\r\n};\r\n\r\nconst cardsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOAD_CARDS_PENDING:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            };\r\n        case ActionTypes.LOAD_CARDS_REJECTED: {\r\n            const { data } = action.payload.response || {};\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                response: data,\r\n                error: true\r\n            };\r\n        }\r\n        case ActionTypes.LOAD_CARDS_FULFILLED: {\r\n            const result = formattingCardsResponse(action.payload.data);\r\n\r\n            // sort according to daily players fetch\r\n            const data = fetchedCards.get();\r\n            if (data) {\r\n                const ids = data.card_ids;\r\n                result.sort((a, b) => {\r\n                    if (ids.indexOf(a.id) > ids.indexOf(b.id)) return 1;\r\n                    if (ids.indexOf(a.id) < ids.indexOf(b.id)) return -1;\r\n                });\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                cards: result,\r\n                error: false\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cardsReducer;\r\n","import * as ActionTypes from \"../constants/ActionTypes\";\r\nimport { selectedCards } from \"../storage/cards\";\r\n\r\n\r\nconst data = selectedCards.getOrInvalidate();\r\nconst initialState = {\r\n    ids: data ? data.card_ids : [],\r\n    isSending: false,\r\n    response: null,\r\n    error: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.SET_SELECTED_CARDS_PENDING:\r\n            return {\r\n                ...state,\r\n                isSending: true\r\n            };\r\n        case ActionTypes.SET_SELECTED_CARDS_REJECTED: {\r\n            const { data } = action.payload.response || {};\r\n            return {\r\n                ...state,\r\n                isSending: false,\r\n                response: data,\r\n                error: true\r\n            };\r\n        }\r\n        case ActionTypes.SET_SELECTED_CARDS_FULFILLED:\r\n            return {\r\n                ...state,\r\n                isSending: false,\r\n                ids: action.meta.ids,\r\n                error: false\r\n            };\r\n        // case ActionTypes.CLEAR_SELECTED_CARDS:\r\n        //     return { ids: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport preloaderReducer from \"./preloader\";\r\nimport userReducer from \"./user\";\r\nimport contentReducer from \"./content\";\r\nimport fetchedCardsIDsReducer from \"./fetchedCards\";\r\nimport cardsReducer from \"./cards\";\r\nimport selectedCardsIDsReducer from \"./selectedCards\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    preloader: preloaderReducer,\r\n    user: userReducer,\r\n    content: contentReducer,\r\n    fetchedCardsIDs: fetchedCardsIDsReducer,\r\n    cards: cardsReducer,\r\n    selectedCardsIDs: selectedCardsIDsReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","const environment = process.env.NODE_ENV;\r\n\r\nif (environment === 'production') {\r\n  module.exports = require('./store.prod')\r\n} else {\r\n  module.exports = require('./store.dev')\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport promise from \"redux-promise-middleware\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        promise,\r\n        thunk\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport promise from \"redux-promise-middleware\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n\r\nconst composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n            // options like actionSanitizer, stateSanitizer\r\n        }) : compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(\r\n            promise,\r\n            thunk\r\n        )\r\n    )\r\n);\r\n\r\nif (module.hot) {\r\n    // Enable Webpack hot module replacement for reducers\r\n    module.hot.accept('../reducers', () => {\r\n        store.replaceReducer(rootReducer)\r\n    })\r\n}\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst ballColor = '#f47436';\r\nconst strokeColor = '#eeeeee';\r\n\r\nconst Preloader = (props) => {\r\n    const { show } = useSelector(state => state.preloader);\r\n    return (\r\n        show ?\r\n            <div className=\"preloader__wrapper\">\r\n                <div className=\"preloader\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n                         className=\"preloader-ball\"\r\n                         viewBox=\"0 0 100 100\"\r\n                         preserveAspectRatio=\"xMidYMid\">\r\n\r\n                        <circle cx=\"50\" cy=\"50\" r=\"50.25\"\r\n                                fill={ballColor}\r\n                                stroke={strokeColor}\r\n                                strokeWidth=\"4.5\" />\r\n                        <path d=\"M50 0L50 100\"\r\n                              stroke={strokeColor}\r\n                              strokeWidth=\"4\" />\r\n                        <path d=\"M14.644660940672622 14.644660940672622 A50 50 0 0 1 14.644660940672622 85.35533905932738\"\r\n                              fill=\"none\"\r\n                              stroke={strokeColor}\r\n                              strokeWidth=\"4\" />\r\n                        <path d=\"M85.35533905932738 14.644660940672622 A50 50 0 0 0 85.35533905932738 85.35533905932738\"\r\n                              fill=\"none\"\r\n                              stroke={strokeColor}\r\n                              strokeWidth=\"4\" />\r\n\r\n                        <g transform=\"translate(0 50)\">\r\n                            <path d=\"M0 0A50 50 0 0 1 100 0\" fill=\"none\" stroke={strokeColor} strokeWidth=\"4\">\r\n                                <animate attributeName=\"d\"\r\n                                         repeatCount=\"indefinite\"\r\n                                         dur=\"1s\"\r\n                                         calcMode=\"spline\"\r\n                                         keyTimes=\"0;0.499999;0.5;1\"\r\n                                         keySplines=\"0.1 0 1 0.9;0.5 0.5 0.5 0.5;0 0.1 0.9 1\"\r\n                                         values=\"M0 0A50 50 0 0 1 100 0;M0 0A50 0 0 0 1 100 0;M0 0A50 0 0 0 0 100 0;M0 0A50 50 0 0 0 100 0\"\r\n                                         begin=\"0\" />\r\n                            </path>\r\n                            <path d=\"M0 0A50 50 0 0 1 100 0\" fill=\"none\" stroke={strokeColor} strokeWidth=\"4\">\r\n                                <animate attributeName=\"d\"\r\n                                         repeatCount=\"indefinite\"\r\n                                         dur=\"1s\"\r\n                                         calcMode=\"spline\"\r\n                                         keyTimes=\"0;0.499999;0.5;1\"\r\n                                         keySplines=\"0.1 0 1 0.9;0.5 0.5 0.5 0.5;0 0.1 0.9 1\"\r\n                                         values=\"M0 0A50 50 0 0 1 100 0;M0 0A50 0 0 0 1 100 0;M0 0A50 0 0 0 0 100 0;M0 0A50 50 0 0 0 100 0\"\r\n                                         begin=\"-0.5\" />\r\n                            </path>\r\n                        </g>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n            : null\r\n    )\r\n};\r\n\r\nexport default Preloader;\r\n","\r\nconst storeKey = 'user_id';\r\n\r\nexport const login = (user_id) => {\r\n    localStorage.setItem(storeKey, user_id);\r\n};\r\n\r\nexport const getUser = () => {\r\n    return localStorage.getItem(storeKey);\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n    const user = getUser();\r\n    return !!user;\r\n};\r\n","import { include } from \"named-urls\";\r\n\r\n\r\nexport default {\r\n   home: '/',\r\n   login: '/login',\r\n   thanks: '/thanks'\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nimport { isAuthenticated } from \"../storage/auth\";\r\nimport routes from \"../constants/routes\";\r\n\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return (isAuthenticated() ? (\r\n                    <Component {...props}/>\r\n                ) : (\r\n                    <Redirect to={{\r\n                        pathname: routes.login,\r\n                        state: {from: props.location}\r\n                    }}/>\r\n                ));\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    component: PropTypes.elementType.isRequired\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import dayjs from \"dayjs\";\r\nimport utc from \"dayjs/plugin/utc\";\r\n\r\nimport * as ActionTypes from \"../constants/ActionTypes\";\r\nimport { CARDS_SHOW_COUNT, QUERY_DATE_FORMAT } from \"../constants/defaults\";\r\nimport { fetchedCards } from \"../storage/cards\";\r\n\r\nimport { axiosAPI, urls } from \"../api\";\r\nimport { getUser } from \"../storage/auth\";\r\n\r\n\r\ndayjs.extend(utc);\r\n\r\n\r\n// preloader\r\nexport const showPreloader = () => (dispatch, getState) => {\r\n    const { show } = getState().preloader;\r\n\r\n    if (show) {\r\n        return null\r\n    }\r\n\r\n    return dispatch({\r\n        type: ActionTypes.SHOW_PRELOADER\r\n    })\r\n};\r\n\r\nexport const hidePreloader = () => (dispatch, getState) => {\r\n    const { show } = getState().preloader;\r\n\r\n    if (!show) {\r\n        return null\r\n    }\r\n\r\n    return dispatch({\r\n        type: ActionTypes.HIDE_PRELOADER\r\n    })\r\n};\r\n\r\n// user\r\nexport const loginUser = (Email, Instagram, Phone) => dispatch => {\r\n    const user = getUser();\r\n\r\n    if (user) {\r\n        return Promise.resolve(user)\r\n    }\r\n\r\n    return dispatch({\r\n        type: ActionTypes.LOGIN,\r\n        payload: axiosAPI.post(urls.users, {fields: { Email, Instagram, Phone }})\r\n    });\r\n};\r\n\r\n// content\r\nexport const loadContent = () => (dispatch, getState) => {\r\n    const state = getState();\r\n    if (state.content.isFetching) {\r\n        return Promise.reject(null)\r\n    }\r\n\r\n    return dispatch({\r\n        type: ActionTypes.LOAD_CONTENT,\r\n        payload: axiosAPI.get(urls.content, {\r\n            maxRecords: 1\r\n        })\r\n    });\r\n};\r\n\r\n// daily players\r\nexport const loadDailyPlayers = () => (dispatch, getState) => {\r\n    const state = getState();\r\n    if (state.fetchedCardsIDs.isFetching) {\r\n        return Promise.reject(null)\r\n    }\r\n\r\n    const filter = `Date=TODAY()`;\r\n    // const test = dayjs.utc('2020-10-04');\r\n    // const filter = `Date=\"${test.format(QUERY_DATE_FORMAT)}\"`;\r\n\r\n    return dispatch({\r\n        type: ActionTypes.LOAD_DAILY_PLAYERS,\r\n        payload: axiosAPI.get(urls.daily, {\r\n            params: {\r\n                filterByFormula: filter,\r\n                // maxRecords: 100              TODO pagination\r\n            }\r\n        })\r\n    });\r\n};\r\n\r\n// cards\r\nexport const loadCards = (ids) => (dispatch, getState) => {\r\n    const state = getState();\r\n    if (state.cards.isFetching || !ids) {\r\n        return Promise.reject(null)\r\n    }\r\n\r\n    const operands = ids.map(value => `RECORD_ID()='${value}'`);\r\n    const filter = `OR(${operands.join(',')})`;\r\n\r\n    return dispatch({\r\n        type: ActionTypes.LOAD_CARDS,\r\n        payload: axiosAPI.get(urls.cards, {\r\n            params: {\r\n                filterByFormula: filter,\r\n                maxRecords: CARDS_SHOW_COUNT\r\n            }\r\n        })\r\n    });\r\n};\r\n\r\n// user set\r\nexport const setCards = (selected_ids, bitmap) => (dispatch, getState) => {\r\n    const state = getState();\r\n    if (state.selectedCardsIDs.isSending) {\r\n        return Promise.reject(null)\r\n    }\r\n\r\n    const user = getUser();\r\n    if (!user) {\r\n        return Promise.reject(null);\r\n    }\r\n\r\n    const fetchedData = fetchedCards.get();\r\n    if (!fetchedData) {\r\n        return Promise.reject(null);\r\n    }\r\n\r\n    return dispatch({\r\n        type: ActionTypes.SET_SELECTED_CARDS,\r\n        payload: axiosAPI.post(urls.sets, {\r\n            fields: {\r\n                'User': [user], // API require array\r\n                'Players_m2m': fetchedData.pd_ids.filter((id, i) => bitmap[i])\r\n            }\r\n        }),\r\n        meta: {\r\n            ids: selected_ids\r\n        }\r\n    });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { showPreloader, hidePreloader, loadContent } from \"../actions\";\r\n\r\n\r\nconst Page = (props) => {\r\n    const dispatch = useDispatch();\r\n    const content = useSelector(state => state.content);\r\n\r\n    useEffect(() => {\r\n        if (!content.response) {\r\n            dispatch(showPreloader());\r\n            dispatch(\r\n                loadContent()\r\n            ).then(() => {\r\n                dispatch(hidePreloader());\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"app-page\">\r\n            <main id=\"app-main\">\r\n                {content.isFetching ? null : props.children}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nPage.propTypes = {\r\n    children: PropTypes.element.isRequired\r\n};\r\n\r\nexport default Page;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport { LOAD_CARDS_FULFILLED, SET_SELECTED_CARDS_FULFILLED } from \"../constants/ActionTypes\";\r\nimport { CARDS_SHOW_COUNT, CARDS_SELECT_COUNT } from \"../constants/defaults\";\r\nimport { showPreloader, hidePreloader, loadCards, setCards } from \"../actions\";\r\nimport { fetchedCards, selectedCards } from \"../storage/cards\";\r\nimport { formattingCardsResponse } from \"../api\";\r\nimport { createMarkup, loadImages } from \"../utils\";\r\n\r\n\r\nconst appearAnimationDuration = 2000;\r\nconst animationClasses = {\r\n    enter: 'enter',\r\n    enterActive: 'active-enter',\r\n    enterDone: 'done-enter',\r\n    exit: 'exit',\r\n    exitActive: 'active-exit',\r\n    exitDone: 'done-exit',\r\n};\r\n\r\nconst MainList = (props) => {\r\n    const dispatch = useDispatch();\r\n    const content = useSelector(state => state.content);\r\n    const { cards } = useSelector(store => store.cards);\r\n    const [showCards, setShowCards] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(showPreloader());\r\n        dispatch(\r\n            loadCards(props.fetched_ids)\r\n        ).then(\r\n            ({value, action}) => {\r\n                if (action && action.type === LOAD_CARDS_FULFILLED) {\r\n                    const cards = formattingCardsResponse(value.data);\r\n                    return loadImages(cards.map(card => card.image_url))\r\n                }\r\n            }, (error) => {}\r\n        ).then(() => {\r\n            dispatch(hidePreloader());\r\n            setShowCards(true);\r\n        });\r\n    }, []);\r\n\r\n    const [lastChoiceIndex, setLastChoiceIndex] = useState(null);\r\n    const [choicedCards, setChoicedCards] = useState(Array(CARDS_SHOW_COUNT).fill(0));\r\n\r\n    const isFullSet = () => choicedCards.filter(Boolean).length === CARDS_SELECT_COUNT;\r\n\r\n    const handlePersonClick = (i) => {\r\n        const currentSelectedCards = choicedCards.slice();\r\n        if (currentSelectedCards[i]) {\r\n            currentSelectedCards[i] = 0\r\n        } else {\r\n            if (isFullSet()) currentSelectedCards[lastChoiceIndex] = 0;\r\n            currentSelectedCards[i] = 1\r\n        }\r\n        setLastChoiceIndex(i);\r\n        setChoicedCards(currentSelectedCards);\r\n    };\r\n\r\n    const handleEnterClick = (event) => {\r\n        // setShowCards(false);\r\n        // on exit callback CSS transition\r\n        dispatch(showPreloader());\r\n\r\n        const cards_ids = cards.map(card => card.id);\r\n        const selected_ids = cards_ids.filter((id, i) => choicedCards[i]);\r\n        dispatch(setCards(selected_ids, choicedCards.slice())).then(\r\n            ({value, action}) => {\r\n                if (action && action.type === SET_SELECTED_CARDS_FULFILLED) {\r\n                    selectedCards.set({\r\n                        selected_ids,\r\n                        ts: value.data.fields[\"Date\"]\r\n                    });\r\n                    fetchedCards.clear();\r\n                }\r\n            }, (error) => {});\r\n    };\r\n\r\n    if (!cards.length) return null;\r\n\r\n    return (\r\n        <div className=\"list\">\r\n            {cards.map((card, i) => {\r\n                let classes = 'card';\r\n                if (choicedCards[i]) classes += ' selected';\r\n                else if (isFullSet()) classes += ' skipped';\r\n\r\n                return (\r\n                    <CSSTransition\r\n                        in={showCards}\r\n                        timeout={appearAnimationDuration}\r\n                        classNames={animationClasses}\r\n                        key={card.id}\r\n                        unmountOnExit>\r\n                        <div className=\"list-item\">\r\n                            <div className={classes} onClick={() => handlePersonClick(i)}>\r\n                                <div className=\"card-image-wrapper\">\r\n                                    <img className=\"card-image\"\r\n                                         src={card.image_url}\r\n                                         alt={card.name} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </CSSTransition>\r\n                )\r\n            })}\r\n\r\n            <CSSTransition\r\n                in={showCards}\r\n                timeout={appearAnimationDuration}\r\n                key=\"button\"\r\n                classNames={animationClasses}\r\n                unmountOnExit>\r\n                <div className=\"list-item\">\r\n                    <div className=\"rules\">\r\n                        <div className=\"rule-1\" dangerouslySetInnerHTML={createMarkup(content.cards_page_green)} />\r\n                        <div className=\"rule-2\" dangerouslySetInnerHTML={createMarkup(content.cards_page_gray)} />\r\n                    </div>\r\n                    <div className=\"button-wrapper\">\r\n                        <button type=\"button\"\r\n                                className=\"btn btn-green\"\r\n                                onClick={handleEnterClick}\r\n                                disabled={!isFullSet()}>\r\n                            <span className=\"btn-text\">{\"enter\"}</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        </div>\r\n    );\r\n};\r\n\r\nMainList.propTypes = {\r\n    fetched_ids: PropTypes.array.isRequired\r\n};\r\n\r\nexport default MainList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Anime from \"@mollycule/react-anime\";\r\n\r\n\r\nimport { createMarkup } from \"../utils\";\r\n\r\n\r\nconst MainEmpty = () => {\r\n    const content = useSelector(state => state.content);\r\n\r\n    return (\r\n        <Anime\r\n            in\r\n            duration={800}\r\n            appear\r\n            onEntering={{\r\n                opacity: [0, 1],\r\n                translateY: [220, 0],\r\n                easing: \"easeInOutSine\"\r\n            }}>\r\n\r\n            <div className=\"empty-label text-markdown\"\r\n                 dangerouslySetInnerHTML={createMarkup(content.empty_page)} />\r\n        </Anime>\r\n    )\r\n};\r\n\r\nexport default MainEmpty;\r\n","import React, {useEffect} from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Page from \"../components/Page\";\r\nimport MainList from \"../components/MainList\";\r\nimport MainEmpty from \"../components/MainEmpty\";\r\nimport { CARDS_SHOW_COUNT } from \"../constants/defaults\";\r\nimport { showPreloader, hidePreloader, loadDailyPlayers } from \"../actions\";\r\nimport { LOAD_DAILY_PLAYERS_FULFILLED } from \"../constants/ActionTypes\";\r\nimport { formattingDailyPlayersResponse } from \"../api\";\r\nimport routes from \"../constants/routes\";\r\n\r\n\r\nconst MainPage = () => {\r\n    const dispatch = useDispatch();\r\n    const { ids: fetched_ids } = useSelector(state => state.fetchedCardsIDs);\r\n    const { ids: selected_ids } = useSelector(state => state.selectedCardsIDs);\r\n    const hasFetched = fetched_ids.length;\r\n    const hasSelected = selected_ids.length;\r\n\r\n    useEffect(() => {\r\n        if (!hasSelected && !hasFetched) {\r\n            dispatch(showPreloader());\r\n            dispatch(\r\n                loadDailyPlayers()\r\n            ).then(\r\n                ({value, action}) => {\r\n                    if (action && action.type === LOAD_DAILY_PLAYERS_FULFILLED) {\r\n                        const formattedData = formattingDailyPlayersResponse(value.data);\r\n                        const count = formattedData.length;\r\n\r\n                        if (count < CARDS_SHOW_COUNT) {\r\n                            // случай захода на страницу во время заполнения таблицы\r\n                            dispatch(hidePreloader());\r\n                            return Promise.resolve(null);\r\n                        }\r\n                    }\r\n                }, (error) => {}\r\n            );\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        hasSelected ?\r\n            <Redirect to={routes.thanks} />\r\n            :\r\n            <Page>\r\n                <div className=\"cards-wrapper\">\r\n                    <div className=\"container\">\r\n                        {hasFetched ? <MainList fetched_ids={fetched_ids} /> : <MainEmpty />}\r\n                    </div>\r\n                </div>\r\n            </Page>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Anime from \"@mollycule/react-anime\";\r\n\r\n\r\nconst SplitText = (props) => {\r\n    const letters = props.text.split('').map(\r\n        (letter, i) => <span key={i + letter} className=\"letter\">{letter}</span>\r\n    );\r\n\r\n    return (\r\n        <div className=\"letters\">\r\n            <Anime\r\n                in\r\n                duration={props.duration}\r\n                appear\r\n                onEntering={props.onEnterAnimation}\r\n                onExiting={props.onExitAnimation}>\r\n                {letters}\r\n            </Anime>\r\n        </div>\r\n    )\r\n};\r\n\r\nSplitText.propTypes = {\r\n    text: PropTypes.string,\r\n    duration: PropTypes.number,\r\n    onEnterAnimation: PropTypes.object,\r\n    onExitAnimation: PropTypes.object\r\n};\r\n\r\nexport default SplitText;\r\n","import anime from \"animejs\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport SplitText from \"./SplitText\";\r\n\r\n\r\nconst LoginLabel = () => {\r\n    const content = useSelector(state => state.content);\r\n\r\n    return (\r\n        <div className=\"head-label-wrapper\">\r\n            <div className=\"container\">\r\n                <div className=\"head-label center-text\">\r\n                    <SplitText\r\n                        text={content.login_label}\r\n                        duration={650}\r\n                        onEnterAnimation={{\r\n                            opacity: [0, 1],\r\n                            translateX: function(el, index) {\r\n                                return [-1 * el.offsetLeft, 0];\r\n                            },\r\n                            delay: anime.stagger(50),\r\n                            easing: \"easeOutQuint\"\r\n                        }} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LoginLabel;\r\n","export default __webpack_public_path__ + \"images/preview2.png\";","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// import anime from \"animejs\";\r\nimport Anime from \"@mollycule/react-anime\";\r\n\r\n// import SplitText from \"./SplitText\";\r\nimport preview from \"img/preview2.png\";\r\n\r\n\r\nconst delay = 600;\r\n\r\nconst LoginPreview = () => {\r\n    const content = useSelector(state => state.content);\r\n\r\n    return (\r\n        <div className=\"login-preview-wrapper\">\r\n            <Anime\r\n                in\r\n                duration={1200}\r\n                appear\r\n                onEntering={{\r\n                    opacity: [0, 1],\r\n                    delay: delay,\r\n                    easing: \"easeOutExpo\"\r\n                }}>\r\n                <div className=\"login-preview\">\r\n                    <img className=\"login-preview-img\" src={preview} alt=\"preview\"/>\r\n                </div>\r\n            </Anime>\r\n\r\n            <Anime\r\n                in\r\n                duration={800}\r\n                appear\r\n                onEntering={{\r\n                    opacity: [0, 1],\r\n                    translateX: [270, 0],\r\n                    delay: delay\r\n                }}>\r\n                <div className=\"login-preview-label center-text\">\r\n                    {content.login_text}\r\n                </div>\r\n            </Anime>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LoginPreview;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport PropTypes from \"prop-types\";\r\nimport Anime from \"@mollycule/react-anime\";\r\n\r\nimport { LOGIN_FULFILLED } from \"../constants/ActionTypes\";\r\n// import ErrorWithDelay from \"./ErrorWithDelay\";\r\nimport { loginUser, showPreloader } from \"../actions\";\r\nimport { login } from \"../storage/auth\";\r\n// import { fetchUser } from \"../api\";\r\n\r\n\r\n// validation\r\nconst composeValidators = (...validators) => value =>\r\n    validators.reduce((error, validator) => error || validator(value), undefined);\r\n\r\nconst required = value => (value ? undefined : \"Required\");\r\n\r\nconst emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/igm;\r\nconst match_email = value => (\r\n    value.match(emailRegexp) ? undefined : 'Email does not match validation scheme \"my@mail.com\"'\r\n);\r\n\r\nconst instRegexp = /^(?!.*\\.\\.)(?!.*\\.$)[^\\W][\\w.]{0,29}$/igm;\r\nconst match_inst = value => (\r\n    value.match(instRegexp) ? undefined : \"Your name Instagram is incorrect\"\r\n);\r\n\r\nconst phoneRegexp = /\\(?([0-9]{3})\\)?([ .-])?([0-9]{3})([ .-])?([0-9]{4})/g;\r\nconst match_phone = value => (\r\n    value.match(phoneRegexp) ? undefined : \"Phone does not match validation scheme (999) 999-9999\"\r\n);\r\n\r\n// parse\r\nconst normalizePhone = value => {\r\n    if (!value) return value;\r\n    const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n    if (onlyNums.length <= 3) return onlyNums;\r\n    if (onlyNums.length <= 7)\r\n        return `(${onlyNums.slice(0, 3)}) ${onlyNums.slice(3, 7)}`;\r\n    return `(${onlyNums.slice(0, 3)}) ${onlyNums.slice(3, 6)}-${onlyNums.slice(6, 10)}`;\r\n};\r\n\r\n// formatter\r\n//\r\n\r\n// animations\r\nconst delay = 600;\r\n\r\nconst WrappedField = ({ input, meta, placeholder, animationDelay }) => {\r\n    const name = input.name;\r\n    const { touched, error } = meta;\r\n    const invalid = error && touched;\r\n    let classes = `field field-${name}`;\r\n    if (invalid) classes += ' invalid';\r\n\r\n    return (\r\n        <Anime\r\n            in\r\n            duration={800}\r\n            appear\r\n            onEntering={{\r\n                opacity: [0, 1],\r\n                translateX: [-270, 0],\r\n                easing: 'easeOutElastic(1, 0.7)',\r\n                delay: delay + animationDelay\r\n            }}>\r\n            <div className={classes}>\r\n                <div className=\"control\">\r\n                    <input {...input} type=\"text\" placeholder={placeholder} />\r\n                    {invalid && <div className=\"error\"><span>{error}</span></div>}\r\n                    {/*<ErrorWithDelay name={name} delay={3000}>*/}\r\n                    {/*{error => <div className=\"error\"><span>{error}</span></div>}*/}\r\n                    {/*</ErrorWithDelay>*/}\r\n                </div>\r\n            </div>\r\n        </Anime>\r\n    )\r\n};\r\n\r\nWrappedField.propTypes = {\r\n    input: PropTypes.object,\r\n    meta: PropTypes.object\r\n};\r\n\r\n\r\nconst LoginForm = ({ next }) => {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    const onSubmit = async values => {\r\n        dispatch(showPreloader());\r\n\r\n        // trying fetch user\r\n        // try {\r\n        //     const response = await fetchUser(\r\n        //         values.email, values.instagram, values.phone\r\n        //     );\r\n        //     if (response.data.data.length) {\r\n        //         login(values);\r\n        //         history.push(next);\r\n        //         return Promise.resolve();\r\n        //     }\r\n        // } catch (error) {\r\n        //     console.log(error);\r\n        // }\r\n\r\n        // if no user, create it\r\n        return dispatch(loginUser(\r\n            values.email, values.instagram, values.phone\r\n        )).then(\r\n            ({value, action}) => {\r\n                if (action && action.type === LOGIN_FULFILLED) {\r\n                    login(value.data.id);\r\n                    history.push(next);\r\n                }\r\n            }, (error) => {});\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            render={({ handleSubmit, submitting, values }) => (\r\n                <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-fields\">\r\n                        <Field name=\"email\"\r\n                               placeholder=\"Email\"\r\n                               animationDelay={0}\r\n                               component={WrappedField}\r\n                               validate={composeValidators(required, match_email)} />\r\n                        <Field name=\"instagram\"\r\n                               placeholder=\"Instagram handle\"\r\n                               animationDelay={100}\r\n                               component={WrappedField}\r\n                               validate={composeValidators(required, match_inst)} />\r\n                        <Field name=\"phone\"\r\n                               placeholder=\"(999) 999-9999\"\r\n                               animationDelay={200}\r\n                               component={WrappedField}\r\n                               validate={composeValidators(required, match_phone)}\r\n                               parse={normalizePhone} />\r\n                    </div>\r\n\r\n                    <div className=\"form-btn-wrap center-text\">\r\n                        <Anime\r\n                            in\r\n                            duration={1000}\r\n                            appear\r\n                            onEntering={{\r\n                                opacity: [0, 1],\r\n                                translateX: [270, 0],\r\n                                rotateX: [-180, 0],\r\n                                rotateY: [-210, 0],\r\n                                rotateZ: [-90, 0],\r\n                                delay: delay + 100,\r\n                                easing: 'easeOutElastic(1, .7)'\r\n                            }}>\r\n                            <button type=\"submit\" disabled={submitting} className=\"btn btn-green\">\r\n                                <span className=\"btn-text\">{\"deal\"}</span>\r\n                            </button>\r\n                        </Anime>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n    )\r\n};\r\n\r\nLoginForm.propTypes = {\r\n    next: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.object\r\n    ])\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// import anime from \"animejs\";\r\nimport Anime from \"@mollycule/react-anime\";\r\n\r\nimport { createMarkup } from \"../utils\";\r\n\r\n\r\nconst delay = 1000;\r\n\r\nconst LoginBottom = () => {\r\n    const content = useSelector(state => state.content);\r\n\r\n    return (\r\n        <div className=\"login-bottom-wrapper\">\r\n            <Anime\r\n                in\r\n                duration={1200}\r\n                appear\r\n                onEntering={{\r\n                    opacity: [0, 1],\r\n                    delay: delay,\r\n                    easing: \"easeOutExpo\"\r\n                }}>\r\n                <div className=\"login-consent center-text\"\r\n                     dangerouslySetInnerHTML={createMarkup(content.login_consent)} />\r\n            </Anime>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LoginBottom;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Page from \"../components/Page\";\r\nimport LoginLabel from \"../components/LoginLabel\";\r\nimport LoginPreview from \"../components/LoginPreview\";\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport LoginBottom from \"../components/LoginBottom\";\r\nimport routes from \"../constants/routes\";\r\nimport { isAuthenticated } from \"../storage/auth\";\r\n\r\n\r\nconst LoginPage = (props) => {\r\n    const { from: { pathname: next = routes.home } = {} } = props.location.state || {};\r\n\r\n    return (\r\n        isAuthenticated() ?\r\n            <Redirect to={next}/>\r\n            :\r\n            <Page>\r\n                <React.Fragment>\r\n                    <LoginLabel />\r\n\r\n                    <div className=\"login-form-wrapper\">\r\n                        <div className=\"container\">\r\n                            <LoginPreview />\r\n                            <LoginForm next={next} />\r\n                            <LoginBottom />\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            </Page>\r\n    )\r\n};\r\n\r\nLoginPage.propTypes = {\r\n    location: PropTypes.object.isRequired\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport anime from \"animejs\";\r\n\r\nimport SplitText from \"./SplitText\";\r\n\r\n\r\nconst ThanksLabel = ({ title }) => {\r\n    return (\r\n        <div className=\"thanks-label center-text\">\r\n            <SplitText\r\n                text={title}\r\n                duration={650}\r\n                onEnterAnimation={{\r\n                    opacity: [0, 1],\r\n                    translateX: function(el, index) {\r\n                        return [-1 * el.offsetLeft, 0];\r\n                    },\r\n                    delay: anime.stagger(50),\r\n                    easing: \"easeOutQuint\"\r\n                }} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ThanksLabel;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Anime from \"@mollycule/react-anime\";\r\n\r\n\r\nconst ThanksText = (props) => {\r\n    return (\r\n        <Anime\r\n            in\r\n            duration={800}\r\n            appear\r\n            onEntering={{\r\n                opacity: [0, 1],\r\n                translateX: [-270, 0],\r\n                delay: props.delay,\r\n                easing: \"easeOutExpo\"\r\n            }}>\r\n            <div className=\"thanks-text-block\">\r\n                {props.children}\r\n            </div>\r\n        </Anime>\r\n    )\r\n};\r\n\r\nThanksText.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    delay: PropTypes.number\r\n};\r\n\r\nexport default ThanksText;\r\n","import React from \"react\";\r\nimport anime from \"animejs\";\r\nimport Anime from \"@mollycule/react-anime\";\r\n\r\n\r\nconst ThanksCards = ({ cards }) => {\r\n    return (\r\n        <div className=\"selected-cards\">\r\n            <Anime\r\n                in\r\n                duration={1400}\r\n                appear\r\n                onEntering={{\r\n                    opacity: [0, 1],\r\n                    delay: anime.stagger(100, {start: 1000}),\r\n                    easing: \"easeOutSine\"\r\n                }}>\r\n                {cards.map(card => {\r\n                    return (\r\n                        <div className=\"selected-card\" key={card.id}>\r\n                            <div className=\"card-image-wrapper\">\r\n                                <img className=\"card-image\"\r\n                                     src={card.image_url}\r\n                                     alt={card.name} />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </Anime>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ThanksCards;\r\n","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Page from \"../components/Page\";\r\nimport ThanksLabel from \"../components/ThanksLabel\";\r\nimport ThanksText from \"../components/ThanksText\";\r\nimport ThanksCards from \"../components/ThanksCards\";\r\nimport { LOAD_CARDS_FULFILLED } from \"../constants/ActionTypes\";\r\nimport { showPreloader, hidePreloader, loadCards } from \"../actions\";\r\nimport { formattingCardsResponse } from \"../api\";\r\nimport { createMarkup, loadImages } from \"../utils\";\r\nimport routes from \"../constants/routes\";\r\n\r\n\r\nconst ThanksPage = () => {\r\n    const dispatch = useDispatch();\r\n    const content = useSelector(state => state.content);\r\n    const { ids: selected_ids } = useSelector(state => state.selectedCardsIDs);\r\n    const hasSelected = selected_ids.length;\r\n    let { cards } = useSelector(state => state.cards);\r\n    cards = cards.filter(card => selected_ids.includes(card.id));\r\n\r\n    useEffect(() => {\r\n        // в случае когда юзер заходит на сайт повторно после выбора карт\r\n        if (hasSelected && !cards.length) {\r\n            dispatch(showPreloader());\r\n            dispatch(\r\n                loadCards(selected_ids)\r\n            ).then(\r\n                ({value, action}) => {\r\n                    if (action && action.type === LOAD_CARDS_FULFILLED) {\r\n                        const cards = formattingCardsResponse(value.data);\r\n                        return loadImages(cards.map(card => card.image_url))\r\n                    }\r\n                }, (error) => {}\r\n            ).then(() => {\r\n                dispatch(hidePreloader());\r\n            });\r\n        } else {\r\n            dispatch(hidePreloader());\r\n        }\r\n    }, []);\r\n\r\n    return (!hasSelected ? (\r\n        <Redirect to={routes.home} />\r\n    ) : (\r\n        <Page>\r\n            <div className=\"thanks-wrapper\">\r\n                <div className=\"container\">\r\n                    <ThanksLabel title={content.thanks_label} />\r\n\r\n                    <ThanksText delay={700}>\r\n                        <div className=\"text-markdown\" dangerouslySetInnerHTML={createMarkup(content.thanks_block_1)} />\r\n                    </ThanksText>\r\n\r\n                    <ThanksText delay={800}>\r\n                        <div className=\"text-markdown\" dangerouslySetInnerHTML={createMarkup(content.thanks_block_2)} />\r\n                    </ThanksText>\r\n\r\n                    {cards.length && <ThanksCards cards={cards} />}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    ));\r\n};\r\n\r\nexport default ThanksPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Provider } from \"react-redux\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Preloader from \"../components/Preloader\";\r\nimport PrivateRoute from \"../components/PrivateRoute\";\r\nimport MainPage from \"./MainPage\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport ThanksPage from \"./ThanksPage\";\r\nimport routes from \"../constants/routes\";\r\n\r\n\r\nconst Root = ({ store }) => (\r\n    <Provider store={store}>\r\n        <Switch>\r\n            <PrivateRoute exact path={routes.home} component={MainPage} />\r\n            <PrivateRoute path={routes.thanks} component={ThanksPage} />\r\n            <Route path={routes.login} render={LoginPage} />\r\n            <Route path=\"*\"><Redirect to={routes.home} /></Route>\r\n        </Switch>\r\n        <Preloader />\r\n    </Provider>\r\n);\r\n\r\nRoot.propTypes = {\r\n    store: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Root;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Root from \"./containers/Root\";\r\nimport store from \"./store\";\r\n\r\nimport \"css/vendor/normalize.css\";\r\nimport \"css/root.scss\";\r\n// import \"fonts/fonts\";\r\n\r\n\r\nrender(\r\n    <Router>\r\n        <Root store={store} />\r\n    </Router>,\r\n    document.getElementById('root')\r\n);\r\n","import marked from \"marked\";\r\n\r\n\r\nconst renderer = new marked.Renderer();\r\n\r\n\r\nrenderer.link = (href, title, text) => {\r\n    return `<a class=\"link\" href=${href} target=\"_blank\" rel=\"noreferrer\" title=${title ? title : \"\"}>${text}</a>`;\r\n}\r\n\r\nexport default renderer;\r\n","import axios from \"axios\";\r\nimport marked from \"marked\";\r\n\r\nimport renderer from \"./renderer\";\r\n\r\n\r\nmarked.use({ renderer });\r\n\r\n\r\nconst baseURL = (() => {\r\n    const environment = process.env.NODE_ENV;\r\n\r\n    switch (environment) {\r\n        case 'test':\r\n            return '';\r\n        default:\r\n            return 'https://api.airtable.com/v0/appLEgyLGr8Xpum8P/';\r\n    }\r\n})();\r\n\r\n\r\nexport const axiosAPI = axios.create({\r\n    baseURL: baseURL,\r\n    timeout: 5000,\r\n    headers: {\r\n        Authorization: \"Bearer keyMZ0LJwZkwSeJuQ\",\r\n        \"Content-Type\": \"application/json\",\r\n        accept: \"application/json\",\r\n    },\r\n});\r\n\r\n// 429 status code need retry\r\n// axiosAPI.interceptors.response.use(null, error => {\r\n//     const status = error.status || error.response.status;\r\n//     if (status === 401 || status === 403) {\r\n//         store.dispatch(logoutUser());\r\n//     }\r\n//     return Promise.reject(error);\r\n// });\r\n\r\n\r\nexport const urls = {\r\n    cards: 'Cards',\r\n    daily: 'Daily players',\r\n    sets: 'Sets',\r\n    users: 'Users',\r\n    content: 'Content',\r\n};\r\n\r\nexport const formattingContentResponse = (data) => {\r\n    const { records } = data;\r\n    if (!records.length) return\r\n\r\n    const { fields } = records[0];\r\n    return {\r\n        login_label: fields[\"login_label\"],\r\n        login_text: fields[\"login_text\"],\r\n        login_consent: marked(fields[\"login_consent\"]),\r\n        empty_page: marked(fields[\"empty_page\"]),\r\n        cards_page_green: marked(fields[\"cards_page_green\"]),\r\n        cards_page_gray: marked(fields[\"cards_page_gray\"]),\r\n        thanks_label: fields[\"thanks_label\"],\r\n        thanks_block_1: marked(fields[\"thanks_block_1\"]),\r\n        thanks_block_2: marked(fields[\"thanks_block_2\"])\r\n    }\r\n};\r\n\r\nexport const formattingDailyPlayersResponse = (data) => {\r\n    const { records } = data;\r\n    if (!records.length) return [];\r\n\r\n    return records.filter(dp => Boolean(dp.fields[\"Player\"])).map(dp => {\r\n        const { fields } = dp;\r\n        return {\r\n            id: dp.id,\r\n            card_id: fields[\"Player\"][0]\r\n        }\r\n    });\r\n};\r\n\r\nexport const formattingCardsResponse = (data) => {\r\n    const { records } = data;\r\n    return records.map(card => {\r\n        const { fields } = card;\r\n        const first_image = fields[\"Card\"][0];\r\n        return {\r\n            id: card.id,\r\n            name: fields[\"Name\"],\r\n            image_url: first_image.url\r\n        }\r\n    });\r\n};\r\n"],"sourceRoot":""}