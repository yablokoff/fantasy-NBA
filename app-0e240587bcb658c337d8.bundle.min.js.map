{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/constants/defaults.js","webpack:///./src/js/api.js","webpack:///./src/js/storage/base.js","webpack:///./src/js/storage/cards.js","webpack:///./src/js/utils.js","webpack:///./src/js/constants/ActionTypes.js","webpack:///./src/js/reducers/preloader.js","webpack:///./src/js/reducers/user.js","webpack:///./src/js/reducers/cards.js","webpack:///./src/js/reducers/selectedCards.js","webpack:///./src/js/reducers/index.js","webpack:///./src/js/store/index.js","webpack:///./src/js/store/store.prod.js","webpack:///./src/js/store/store.dev.js","webpack:///./src/js/components/Preloader.js","webpack:///./src/js/storage/auth.js","webpack:///./src/js/constants/routes.js","webpack:///./src/js/components/PrivateRoute.js","webpack:///./src/js/components/Page.js","webpack:///./src/js/actions/index.js","webpack:///./src/js/components/Cards.js","webpack:///./src/js/containers/MainPage.js","webpack:///./src/js/components/LoginLabel.js","webpack:///./src/js/components/LoginAwards.js","webpack:///./src/js/components/LoginForm.js","webpack:///./src/js/containers/LoginPage.js","webpack:///./src/js/containers/ThanksPage.js","webpack:///./src/js/containers/Root.js","webpack:///./src/js/app.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","CARDS_COUNT","CARDS_SHOW_COUNT","CARDS_SELECT_COUNT","DATE_FORMAT","axiosAPI","axios","baseURL","timeout","headers","Authorization","accept","urls","cards","users","sets","formattingCardsResponse","records","map","card","fields","first_image","db_id","id","image_url","url","Store","STORE_KEY","_formatting","set","json","JSON","stringify","this","localStorage","setItem","getItem","parse","err","clear","removeItem","dayjs","extend","utc","FetchedCards","constructor","now","date","format","getIds","card_ids","getRandomIntList","count","rangeMax","fetchedCards","SelectedCards","selected_ids","ts","checkForInvalidate","selectedCards","randomInteger","min","max","rand","Math","random","floor","rangeMin","new_int","includes","loadImage","path","Promise","resolve","img","Image","onload","status","onerror","src","loadImages","sources","Error","all","SHOW_PRELOADER","HIDE_PRELOADER","LOGIN","LOGIN_PENDING","ActionType","Pending","LOGIN_FULFILLED","Fulfilled","LOGIN_REJECTED","Rejected","LOAD_CARDS","LOAD_CARDS_PENDING","LOAD_CARDS_FULFILLED","LOAD_CARDS_REJECTED","SET_SELECTED_CARDS","SET_SELECTED_CARDS_PENDING","SET_SELECTED_CARDS_FULFILLED","SET_SELECTED_CARDS_REJECTED","initialState","show","isFetching","response","error","userReducer","state","action","type","ActionTypes","payload","cardsReducer","ids","isSending","rootReducer","combineReducers","preloader","user","console","log","meta","require","store","createStore","applyMiddleware","promise","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Preloader","props","useSelector","className","xmlns","viewBox","preserveAspectRatio","cx","cy","fill","stroke","strokeWidth","transform","attributeName","repeatCount","dur","calcMode","keyTimes","keySplines","values","begin","getUser","isAuthenticated","PrivateRoute","Component","component","rest","render","to","pathname","routes","from","location","propTypes","PropTypes","elementType","isRequired","Page","children","element","showPreloader","hidePreloader","loadCards","dispatch","getState","reject","filter","join","params","filterByFormula","maxRecords","animationClasses","enter","enterActive","enterDone","exit","exitActive","exitDone","Cards","useDispatch","useState","showCards","setShowCards","useEffect","then","lastChoiceIndex","setLastChoiceIndex","Array","choicedCards","setChoicedCards","isFullSet","Boolean","classes","CSSTransition","in","classNames","unmountOnExit","onClick","currentSelectedCards","handlePersonClick","alt","event","filtered_cards","post","setCards","disabled","MainPage","letters","split","letter","duration","appear","onEntering","opacity","translateX","el","index","offsetLeft","delay","anime","stagger","easing","awards","award","title","keyframes","backgroundPositionX","backgroundSize","scale","rotateY","rotateZ","start","composeValidators","validators","reduce","validator","undefined","required","emailRegexp","match_email","match","instRegexp","match_inst","phoneRegexp","match_phone","normalizePhone","onlyNums","replace","WrappedField","input","placeholder","animationDelay","touched","invalid","LoginForm","next","history","useHistory","onSubmit","Email","email","Instagram","instagram","Phone","phone","user_id","handleSubmit","submitting","validate","rotateX","oneOfType","string","LoginPage","Fragment","LoginLabel","LoginAwards","ThanksPage","hasSelected","Root","exact","document","getElementById"],"mappings":"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","file":"app-0e240587bcb658c337d8.bundle.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([86,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export const CARDS_COUNT = 70;\r\nexport const CARDS_SHOW_COUNT = 5;\r\nexport const CARDS_SELECT_COUNT = 3;\r\n\r\nexport const DATE_FORMAT = \"YYYY-MM-DD\";\r\n","import axios from \"axios\";\r\n\r\n\r\nconst baseURL = (() => {\r\n    const environment = process.env.NODE_ENV;\r\n\r\n    switch (environment) {\r\n        case 'test':\r\n            return '';\r\n        default:\r\n            return 'https://api.airtable.com/v0/appLEgyLGr8Xpum8P/';\r\n    }\r\n})();\r\n\r\n\r\nexport const axiosAPI = axios.create({\r\n    baseURL: baseURL,\r\n    timeout: 5000,\r\n    headers: {\r\n        Authorization: \"Bearer keyQcY7BJrFix6otc\",\r\n        \"Content-Type\": \"application/json\",\r\n        accept: \"application/json\",\r\n    },\r\n});\r\n\r\n// 429 status code need retry\r\n// axiosAPI.interceptors.response.use(null, error => {\r\n//     const status = error.status || error.response.status;\r\n//     if (status === 401 || status === 403) {\r\n//         store.dispatch(logoutUser());\r\n//     }\r\n//     return Promise.reject(error);\r\n// });\r\n\r\n\r\nexport const urls = {\r\n    cards: 'Cards',\r\n    users: 'Users',\r\n    sets: 'Sets',\r\n};\r\n\r\nexport const formattingCardsResponse = (data) => {\r\n    const { records } = data;\r\n    return records.map(card => {\r\n        const { fields } = card;\r\n        const first_image = fields[\"Card\"][0];\r\n        return {\r\n            db_id: card.id,             // for create set through API\r\n            id: fields[\"Card ID\"],      // for filter in fetching cards through API\r\n            name: fields[\"Name\"],\r\n            image_url: first_image.url\r\n        }\r\n    });\r\n};\r\n","\r\n/*\r\n    Базовый класс обёртки для storage.\r\n */\r\nexport const Store = function() {};\r\nStore.prototype.STORE_KEY = 'store_key';\r\n\r\n\r\n/*\r\n    Форматирование данных.\r\n */\r\nStore.prototype._formatting = function(data) {\r\n    return data;\r\n};\r\n\r\n\r\n/*\r\n    Сохранение в storage.\r\n */\r\nStore.prototype.set = function(data) {\r\n    const json = JSON.stringify(this._formatting(data));\r\n    localStorage.setItem(this.STORE_KEY, json);\r\n    return json;\r\n};\r\n\r\n\r\n/*\r\n    Получение данных из storage.\r\n */\r\nStore.prototype.get = function() {\r\n    let data;\r\n    const json = localStorage.getItem(this.STORE_KEY);\r\n    try {\r\n        data = JSON.parse(json);\r\n    } catch (err) {\r\n        data = null\r\n    }\r\n    return data;\r\n};\r\n\r\n\r\n/*\r\n    Удаление из storage.\r\n */\r\nStore.prototype.clear = function() {\r\n    localStorage.removeItem(this.STORE_KEY);\r\n};\r\n","import dayjs from \"dayjs\";\r\nimport utc from \"dayjs/plugin/utc\";\r\n\r\nimport { Store } from \"./base\";\r\nimport { CARDS_COUNT, CARDS_SHOW_COUNT, DATE_FORMAT } from \"../constants/defaults\";\r\nimport { getRandomIntList } from \"../utils\";\r\n\r\n\r\ndayjs.extend(utc);\r\n\r\n\r\n// Класс который сохраняет предложенные пользователю карты.\r\nconst FetchedCards = function() {};\r\nFetchedCards.prototype = Object.create(Store.prototype);\r\nFetchedCards.prototype.constructor = Store;\r\n\r\nFetchedCards.prototype.STORE_KEY = 'fetched_cards';\r\n\r\nFetchedCards.prototype._formatting = function(data) {\r\n    const now = dayjs.utc();\r\n    return {\r\n        date: now.format(DATE_FORMAT),\r\n        ...data\r\n    };\r\n};\r\n\r\nFetchedCards.prototype.getIds = function() {\r\n    const data = this.get();\r\n    if (data && data.date === dayjs.utc().format(DATE_FORMAT)) {\r\n        return data.card_ids;\r\n    } else {\r\n        return getRandomIntList({ count: CARDS_SHOW_COUNT, rangeMax: CARDS_COUNT });\r\n    }\r\n};\r\n\r\nexport const fetchedCards = new FetchedCards();\r\n\r\n\r\n// Класс который сохраняет выбранные пользователем карты.\r\nconst SelectedCards = function() {};\r\nSelectedCards.prototype = Object.create(Store.prototype);\r\nSelectedCards.prototype.constructor = Store;\r\n\r\nSelectedCards.prototype.STORE_KEY = 'selected_cards';\r\n\r\nSelectedCards.prototype._formatting = function({ selected_ids, ts }) {\r\n    const date = dayjs.utc(ts);\r\n    return {\r\n        date: date.format(DATE_FORMAT),\r\n        card_ids: selected_ids,\r\n    };\r\n};\r\n\r\nSelectedCards.prototype.checkForInvalidate = function() {\r\n    const data = this.get();\r\n    if (data) {\r\n        const now = dayjs.utc();\r\n        if (data.date === now.format(DATE_FORMAT)) {\r\n            return data;\r\n        } else {\r\n            this.clear();\r\n        }\r\n    }\r\n};\r\n\r\nexport const selectedCards = new SelectedCards();\r\n","\r\n/**\r\n * Returns a random number between min (inclusive) and max (exclusive)\r\n */\r\nconst randomInteger = (min, max) => {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n};\r\n\r\nexport const getRandomIntList = ({ count=5, rangeMin=1, rangeMax=100 }) => {\r\n    let result = [];\r\n\r\n    while (result.length < count) {\r\n        const new_int = randomInteger(rangeMin, rangeMax);\r\n        if (!result.includes(new_int)) result.push(new_int);\r\n    }\r\n\r\n    return result\r\n};\r\n\r\n\r\n/**\r\n * Async img loading\r\n */\r\nconst loadImage = path =>\r\n    new Promise(resolve => {\r\n        const img = new Image();\r\n        img.onload = () => resolve({path, status: 'ok'});\r\n        img.onerror = () => resolve({path, status: 'error'});\r\n\r\n        img.src = path;\r\n    });\r\n\r\nexport const loadImages = sources => {\r\n    if (!sources || !sources.length) {\r\n        throw new Error('sources required');\r\n    }\r\n    return Promise.all(sources.map(loadImage));\r\n};\r\n","import {ActionType} from 'redux-promise-middleware';\r\n\r\n\r\n// preloader\r\nexport const SHOW_PRELOADER = 'SHOW_PRELOADER';\r\nexport const HIDE_PRELOADER = 'HIDE_PRELOADER';\r\n\r\n// user\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGIN_PENDING = `LOGIN_${ActionType.Pending}`;\r\nexport const LOGIN_FULFILLED = `LOGIN_${ActionType.Fulfilled}`;\r\nexport const LOGIN_REJECTED = `LOGIN_${ActionType.Rejected}`;\r\n\r\n// cards\r\nexport const LOAD_CARDS = 'LOAD_CARDS';\r\nexport const LOAD_CARDS_PENDING = `LOAD_CARDS_${ActionType.Pending}`;\r\nexport const LOAD_CARDS_FULFILLED = `LOAD_CARDS_${ActionType.Fulfilled}`;\r\nexport const LOAD_CARDS_REJECTED = `LOAD_CARDS_${ActionType.Rejected}`;\r\n\r\nexport const SET_SELECTED_CARDS = 'SET_SELECTED_CARDS';\r\nexport const SET_SELECTED_CARDS_PENDING = `SET_SELECTED_CARDS_${ActionType.Pending}`;\r\nexport const SET_SELECTED_CARDS_FULFILLED = `SET_SELECTED_CARDS_${ActionType.Fulfilled}`;\r\nexport const SET_SELECTED_CARDS_REJECTED = `SET_SELECTED_CARDS_${ActionType.Rejected}`;\r\n\r\nexport const CLEAR_SELECTED_CARDS = 'CLEAR_SELECTED_CARDS';\r\n","import * as ActionTypes from \"../constants/ActionTypes\";\r\n\r\n\r\nconst initialState = {\r\n    show: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.SHOW_PRELOADER:\r\n            return { show: true };\r\n\r\n        case ActionTypes.HIDE_PRELOADER:\r\n            return { show: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as ActionTypes from \"../constants/ActionTypes\";\r\n\r\n\r\nconst initialState = {\r\n    isFetching: false,\r\n    response: null,\r\n    error: false\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOGIN_PENDING:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            };\r\n        case ActionTypes.LOGIN_REJECTED: {\r\n            const {data} = action.payload.response || {};\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                response: data,\r\n                error: true\r\n            };\r\n        }\r\n        case ActionTypes.LOGIN_FULFILLED:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                response: action.payload.data,\r\n                error: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userReducer;\r\n","import * as ActionTypes from \"../constants/ActionTypes\";\r\nimport { formattingCardsResponse } from \"../api\";\r\n\r\n\r\nconst initialState = {\r\n    cards: [],\r\n    isFetching: false,\r\n    response: null,\r\n    error: false\r\n};\r\n\r\n\r\nconst cardsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOAD_CARDS_PENDING:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            };\r\n        case ActionTypes.LOAD_CARDS_REJECTED: {\r\n            const { data } = action.payload.response || {};\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                response: data,\r\n                error: true\r\n            };\r\n        }\r\n        case ActionTypes.LOAD_CARDS_FULFILLED:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                cards: formattingCardsResponse(action.payload.data),\r\n                error: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cardsReducer;\r\n","import * as ActionTypes from \"../constants/ActionTypes\";\r\nimport { selectedCards } from \"../storage/cards\";\r\n\r\n\r\nconst data = selectedCards.checkForInvalidate();\r\nconst initialState = {\r\n    ids: data ? data.card_ids : [],\r\n    isSending: false,\r\n    response: null,\r\n    error: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.SET_SELECTED_CARDS_PENDING:\r\n            return {\r\n                ...state,\r\n                isSending: true\r\n            };\r\n        case ActionTypes.SET_SELECTED_CARDS_REJECTED: {\r\n            const { data } = action.payload.response || {};\r\n            console.log(data);\r\n            return {\r\n                ...state,\r\n                isSending: false,\r\n                response: data,\r\n                error: true\r\n            };\r\n        }\r\n        case ActionTypes.SET_SELECTED_CARDS_FULFILLED:\r\n            return {\r\n                ...state,\r\n                isSending: false,\r\n                ids: action.meta.ids,\r\n                error: false\r\n            };\r\n        // case ActionTypes.CLEAR_SELECTED_CARDS:\r\n        //     return { ids: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport preloaderReducer from \"./preloader\";\r\nimport userReducer from \"./user\";\r\nimport cardsReducer from \"./cards\";\r\nimport selectedCardsReducer from \"./selectedCards\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  preloader: preloaderReducer,\r\n  user: userReducer,\r\n  cards: cardsReducer,\r\n  selectedCards: selectedCardsReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","const environment = process.env.NODE_ENV;\r\n\r\nif (environment === 'production') {\r\n  module.exports = require('./store.prod')\r\n} else {\r\n  module.exports = require('./store.dev')\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport promise from \"redux-promise-middleware\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        promise,\r\n        thunk\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport promise from \"redux-promise-middleware\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n\r\nconst composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n            // options like actionSanitizer, stateSanitizer\r\n        }) : compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(\r\n            promise,\r\n            thunk\r\n        )\r\n    )\r\n);\r\n\r\nif (module.hot) {\r\n    // Enable Webpack hot module replacement for reducers\r\n    module.hot.accept('../reducers', () => {\r\n        store.replaceReducer(rootReducer)\r\n    })\r\n}\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst ballColor = '#f47436';\r\nconst strokeColor = '#eeeeee';\r\n\r\nconst Preloader = (props) => {\r\n    const { show } = useSelector(state => state.preloader);\r\n    return (\r\n        show ?\r\n            <div className=\"preloader__wrapper\">\r\n                <div className=\"preloader\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n                         className=\"preloader-ball\"\r\n                         viewBox=\"0 0 100 100\"\r\n                         preserveAspectRatio=\"xMidYMid\">\r\n\r\n                        <circle cx=\"50\" cy=\"50\" r=\"50.25\"\r\n                                fill={ballColor}\r\n                                stroke={strokeColor}\r\n                                strokeWidth=\"4.5\" />\r\n                        <path d=\"M50 0L50 100\"\r\n                              stroke={strokeColor}\r\n                              strokeWidth=\"4\" />\r\n                        <path d=\"M14.644660940672622 14.644660940672622 A50 50 0 0 1 14.644660940672622 85.35533905932738\"\r\n                              fill=\"none\"\r\n                              stroke={strokeColor}\r\n                              strokeWidth=\"4\" />\r\n                        <path d=\"M85.35533905932738 14.644660940672622 A50 50 0 0 0 85.35533905932738 85.35533905932738\"\r\n                              fill=\"none\"\r\n                              stroke={strokeColor}\r\n                              strokeWidth=\"4\" />\r\n\r\n                        <g transform=\"translate(0 50)\">\r\n                            <path d=\"M0 0A50 50 0 0 1 100 0\" fill=\"none\" stroke={strokeColor} strokeWidth=\"4\">\r\n                                <animate attributeName=\"d\"\r\n                                         repeatCount=\"indefinite\"\r\n                                         dur=\"1s\"\r\n                                         calcMode=\"spline\"\r\n                                         keyTimes=\"0;0.499999;0.5;1\"\r\n                                         keySplines=\"0.1 0 1 0.9;0.5 0.5 0.5 0.5;0 0.1 0.9 1\"\r\n                                         values=\"M0 0A50 50 0 0 1 100 0;M0 0A50 0 0 0 1 100 0;M0 0A50 0 0 0 0 100 0;M0 0A50 50 0 0 0 100 0\"\r\n                                         begin=\"0\" />\r\n                            </path>\r\n                            <path d=\"M0 0A50 50 0 0 1 100 0\" fill=\"none\" stroke={strokeColor} strokeWidth=\"4\">\r\n                                <animate attributeName=\"d\"\r\n                                         repeatCount=\"indefinite\"\r\n                                         dur=\"1s\"\r\n                                         calcMode=\"spline\"\r\n                                         keyTimes=\"0;0.499999;0.5;1\"\r\n                                         keySplines=\"0.1 0 1 0.9;0.5 0.5 0.5 0.5;0 0.1 0.9 1\"\r\n                                         values=\"M0 0A50 50 0 0 1 100 0;M0 0A50 0 0 0 1 100 0;M0 0A50 0 0 0 0 100 0;M0 0A50 50 0 0 0 100 0\"\r\n                                         begin=\"-0.5\" />\r\n                            </path>\r\n                        </g>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n            : null\r\n    )\r\n};\r\n\r\nexport default Preloader;\r\n","\r\nconst storeKey = 'user_id';\r\n\r\nexport const login = (user_id) => {\r\n    localStorage.setItem(storeKey, user_id);\r\n};\r\n\r\nexport const getUser = () => {\r\n    return localStorage.getItem(storeKey);\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n    const user = getUser();\r\n    return !!user;\r\n};\r\n","import { include } from \"named-urls\";\r\n\r\n\r\nexport default {\r\n   home: '/',\r\n   login: '/login',\r\n   thanks: '/thanks'\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nimport { isAuthenticated } from \"../storage/auth\";\r\nimport routes from \"../constants/routes\";\r\n\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return (isAuthenticated() ? (\r\n                    <Component {...props}/>\r\n                ) : (\r\n                    <Redirect to={{\r\n                        pathname: routes.login,\r\n                        state: {from: props.location}\r\n                    }}/>\r\n                ));\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    component: PropTypes.elementType.isRequired\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Page = (props) => {\r\n    return (\r\n        <div id=\"app-page\">\r\n            <main id=\"app-main\">\r\n                {props.children}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nPage.propTypes = {\r\n    children: PropTypes.element\r\n};\r\n\r\nexport default Page;\r\n","import * as ActionTypes from \"../constants/ActionTypes\";\r\nimport { CARDS_SHOW_COUNT } from \"../constants/defaults\";\r\nimport { fetchedCards } from \"../storage/cards\";\r\n\r\nimport { axiosAPI, urls } from \"../api\";\r\nimport { getUser } from \"../storage/auth\";\r\n\r\n\r\n// preloader\r\nexport const showPreloader = () => {\r\n    return {\r\n        type: ActionTypes.SHOW_PRELOADER\r\n    }\r\n};\r\n\r\nexport const hidePreloader = () => {\r\n    return {\r\n        type: ActionTypes.HIDE_PRELOADER\r\n    }\r\n};\r\n\r\n// user\r\nexport const loginUser = (Email, Instagram, Phone) => dispatch => {\r\n    const user = getUser();\r\n\r\n    if (user) {\r\n        return Promise.resolve(user)\r\n    }\r\n\r\n    return dispatch({\r\n        type: ActionTypes.LOGIN,\r\n        payload: axiosAPI.post(urls.users, {fields: { Email, Instagram, Phone }})\r\n    });\r\n};\r\n\r\n\r\n// cards\r\nexport const loadCards = (ids) => (dispatch, getState) => {\r\n    const state = getState();\r\n    if (state.cards.isFetching) {\r\n        return Promise.reject(null)\r\n    }\r\n\r\n    ids = ids || fetchedCards.getIds();\r\n\r\n    // OR({Card ID}=1,{Card ID}=2,{Card ID}=3,{Card ID}=4,{Card ID}=5)\r\n    const operands = ids.map(value => `{Card ID}=${value}`);\r\n    const filter = `OR(${operands.join(',')})`;\r\n\r\n    return dispatch({\r\n        type: ActionTypes.LOAD_CARDS,\r\n        payload: axiosAPI.get(urls.cards, {\r\n            params: {\r\n                filterByFormula: filter,\r\n                maxRecords: CARDS_SHOW_COUNT\r\n            }\r\n        })\r\n    });\r\n};\r\n\r\nexport const setCards = (selected_ids) => (dispatch, getState) => {\r\n    const state = getState();\r\n    if (state.selectedCards.isSending) {\r\n        return Promise.reject(null)\r\n    }\r\n\r\n    const user = getUser();\r\n    if (!user) {\r\n        return Promise.reject(null);\r\n    }\r\n\r\n    const { cards } = state.cards;\r\n    if (!cards.length) {\r\n        return Promise.reject(null);\r\n    }\r\n\r\n    const filtered_cards = cards.filter(card => selected_ids.includes(card.id));\r\n\r\n    return dispatch({\r\n        type: ActionTypes.SET_SELECTED_CARDS,\r\n        payload: axiosAPI.post(urls.sets, {\r\n            fields: {\r\n                'User': [user], // API require array\r\n                'Cards': filtered_cards.map(card => card.db_id)\r\n            }\r\n        }),\r\n        meta: {\r\n            ids: selected_ids\r\n        }\r\n    });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport { LOAD_CARDS_FULFILLED, SET_SELECTED_CARDS_FULFILLED } from \"../constants/ActionTypes\";\r\nimport { CARDS_SHOW_COUNT, CARDS_SELECT_COUNT } from \"../constants/defaults\";\r\nimport { showPreloader, hidePreloader, loadCards, setCards } from \"../actions\";\r\nimport { fetchedCards, selectedCards } from \"../storage/cards\";\r\nimport { formattingCardsResponse } from \"../api\";\r\nimport { loadImages } from \"../utils\";\r\n\r\n\r\nconst appearAnimationDuration = 2000;\r\nconst animationClasses = {\r\n    enter: 'enter',\r\n    enterActive: 'active-enter',\r\n    enterDone: 'done-enter',\r\n    exit: 'exit',\r\n    exitActive: 'active-exit',\r\n    exitDone: 'done-exit',\r\n};\r\n\r\nconst Cards = (props) => {\r\n    const dispatch = useDispatch();\r\n    const { show } = useSelector(state => state.preloader);\r\n    const { cards } = useSelector(store => store.cards);\r\n    const [showCards, setShowCards] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log('fetch cards');\r\n        if (!show) {\r\n            dispatch(showPreloader());\r\n        }\r\n        dispatch(loadCards()).then(\r\n            ({value, action}) => {\r\n                if (action && action.type === LOAD_CARDS_FULFILLED) {\r\n                    const cards = formattingCardsResponse(value.data);\r\n                    fetchedCards.set({\r\n                        card_ids: cards.map(card => card.id)\r\n                    });\r\n                    return loadImages(cards.map(card => card.image_url))\r\n                }\r\n            }, (error) => {}).then(() => {\r\n            dispatch(hidePreloader());\r\n            setShowCards(true);\r\n        });\r\n    }, []);\r\n\r\n    const [lastChoiceIndex, setLastChoiceIndex] = useState(null);\r\n    const [choicedCards, setChoicedCards] = useState(Array(CARDS_SHOW_COUNT).fill(0));\r\n\r\n    const isFullSet = () => choicedCards.filter(Boolean).length === CARDS_SELECT_COUNT;\r\n\r\n    const handlePersonClick = (i) => {\r\n        const currentSelectedCards = choicedCards.slice();\r\n        if (currentSelectedCards[i]) {\r\n            currentSelectedCards[i] = 0\r\n        } else {\r\n            if (isFullSet()) currentSelectedCards[lastChoiceIndex] = 0;\r\n            currentSelectedCards[i] = 1\r\n        }\r\n        setLastChoiceIndex(i);\r\n        setChoicedCards(currentSelectedCards);\r\n    };\r\n\r\n    const handleEnterClick = (event) => {\r\n        // setShowCards(false);\r\n        // on exit callback CSS transition\r\n        dispatch(showPreloader());\r\n\r\n        const cards_ids = cards.map(card => card.id);\r\n        const selected_ids = cards_ids.filter((id, i) => choicedCards[i]);\r\n        dispatch(setCards(selected_ids)).then(\r\n            ({value, action}) => {\r\n                if (action && action.type === SET_SELECTED_CARDS_FULFILLED) {\r\n                    fetchedCards.clear();\r\n                    selectedCards.set({ selected_ids, ts: value.data.fields[\"Date\"] });\r\n                }\r\n            }, (error) => {});\r\n    };\r\n\r\n    return (\r\n        <div className=\"list\">\r\n            {cards.map((card, i) => {\r\n                let classes = 'card';\r\n                if (choicedCards[i]) classes += ' selected';\r\n                else if (isFullSet()) classes += ' skipped';\r\n\r\n                return (\r\n                    <CSSTransition\r\n                        in={showCards}\r\n                        timeout={appearAnimationDuration}\r\n                        classNames={animationClasses}\r\n                        key={card.id}\r\n                        unmountOnExit>\r\n                        <div className=\"list-item\">\r\n                            <div className={classes} onClick={() => handlePersonClick(i)}>\r\n                                <div className=\"card-image-wrapper\">\r\n                                    <img className=\"card-image\"\r\n                                         src={card.image_url}\r\n                                         alt={card.name} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </CSSTransition>\r\n                )\r\n            })}\r\n\r\n            <CSSTransition\r\n                in={showCards}\r\n                timeout={appearAnimationDuration}\r\n                key=\"button\"\r\n                classNames={animationClasses}\r\n                unmountOnExit>\r\n                <div className=\"list-item\">\r\n                    <div className=\"rules\">\r\n                        {\"select 3 &\\u00A0discard 2\"}\r\n                    </div>\r\n                    <div className=\"button-wrapper\">\r\n                        <button type=\"button\"\r\n                                className=\"btn btn-green\"\r\n                                onClick={handleEnterClick}\r\n                                disabled={!isFullSet()}>\r\n                            <span className=\"btn-text\">{\"enter\"}</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        </div>\r\n    );\r\n};\r\n\r\nCards.propTypes = {\r\n\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Page from \"../components/Page\";\r\nimport Cards from \"../components/Cards\";\r\nimport routes from \"../constants/routes\";\r\n// import { selectedCards } from \"../storage/cards\";\r\n\r\n\r\nconst MainPage = () => {\r\n    const { ids } = useSelector(state => state.selectedCards);\r\n    return (ids.length ?\r\n            <Redirect to={routes.thanks} />\r\n            :\r\n            <Page>\r\n                <div className=\"cards-wrapper\">\r\n                    <div className=\"container\">\r\n                        <Cards />\r\n                    </div>\r\n                </div>\r\n            </Page>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport anime from \"animejs\";\r\nimport Anime from \"@mollycule/react-anime\";\r\n\r\n\r\nexport default ({ name }) => {\r\n    const letters = name.split('').map(\r\n        (letter, i) => <span key={i + letter} className=\"letter\">{letter}</span>\r\n    );\r\n\r\n    return (\r\n        <div className=\"head-label-wrapper\">\r\n            <div className=\"container\">\r\n                <div className=\"head-label center-text\">\r\n                    <div className=\"letters\">\r\n                        <Anime\r\n                            in\r\n                            duration={650}\r\n                            appear\r\n                            onEntering={{\r\n                                opacity: [0, 1],\r\n                                translateX: function(el, index) {\r\n                                    return [-1 * el.offsetLeft, 0];\r\n                                },\r\n                                delay: anime.stagger(50),\r\n                                easing: \"easeOutQuint\"\r\n                            }}>\r\n                            {letters}\r\n                        </Anime>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport anime from \"animejs\";\r\nimport Anime from \"@mollycule/react-anime\";\r\n\r\n\r\nconst delay = 400;\r\nconst awardsValues = ['$100', 'signed hoodie', 'shoutout'];\r\nconst awards = awardsValues.map(\r\n    (award) =>\r\n        <li key={award} className=\"award\">\r\n            <span className=\"award-label\">{award}</span>\r\n        </li>\r\n);\r\n\r\nexport default ({ title }) => {\r\n    const letters = title.split('').map(\r\n        (letter, i) => <span key={i + letter} className=\"letter\">{letter}</span>\r\n    );\r\n\r\n    return (\r\n        <div className=\"form-content center-text\">\r\n            <Anime\r\n                in\r\n                appear\r\n                duration={1200}\r\n                onEntering={{\r\n                    keyframes: [\r\n                        {\r\n                            backgroundPositionX: 'calc(50% - 127px)',\r\n                            backgroundSize: '3px 3px',\r\n                        },\r\n                        {\r\n                            backgroundPositionX: 'calc(50% - 0px)',\r\n                            backgroundSize: '260px 2px',\r\n                        }\r\n                    ],\r\n                    delay: delay,\r\n                    easing: 'easeOutExpo'\r\n                }}>\r\n\r\n                <div className=\"form-label\">\r\n                    <div className=\"letters\">\r\n                        <Anime\r\n                            in\r\n                            duration={900}\r\n                            appear\r\n                            onEntering={{\r\n                                opacity: [0, 1],\r\n                                translateX: [-140, 0],\r\n                                scale: [1.2, 1],\r\n                                rotateY: [-210, 0],\r\n                                rotateZ: [-90, 0],\r\n                                easing: 'easeOutElastic(1, 0.6)',\r\n                                delay: anime.stagger(80, {start: delay})\r\n                            }}>\r\n                            {letters}\r\n                        </Anime>\r\n                    </div>\r\n                </div>\r\n            </Anime>\r\n\r\n            <ul className=\"awards\">\r\n                <Anime\r\n                    in\r\n                    duration={800}\r\n                    appear\r\n                    onEntering={{\r\n                        opacity: [0, 1],\r\n                        translateX: [270, 0],\r\n                        easing: 'easeOutElastic(1, 0.7)',\r\n                        delay: anime.stagger(100, {start: delay})\r\n                    }}>\r\n                    {awards}\r\n                </Anime>\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport PropTypes from \"prop-types\";\r\nimport Anime from \"@mollycule/react-anime\";\r\n\r\nimport { LOGIN_FULFILLED } from \"../constants/ActionTypes\";\r\n// import ErrorWithDelay from \"./ErrorWithDelay\";\r\nimport { loginUser, showPreloader } from \"../actions\";\r\nimport { login } from \"../storage/auth\";\r\n// import { fetchUser } from \"../api\";\r\n\r\n\r\n// validation\r\nconst composeValidators = (...validators) => value =>\r\n    validators.reduce((error, validator) => error || validator(value), undefined);\r\n\r\nconst required = value => (value ? undefined : \"Required\");\r\n\r\nconst emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/igm;\r\nconst match_email = value => (\r\n    value.match(emailRegexp) ? undefined : 'Email does not match validation scheme \"my@mail.com\"'\r\n);\r\n\r\nconst instRegexp = /^(?!.*\\.\\.)(?!.*\\.$)[^\\W][\\w.]{0,29}$/igm;\r\nconst match_inst = value => (\r\n    value.match(instRegexp) ? undefined : \"Your name Instagram is incorrect\"\r\n);\r\n\r\nconst phoneRegexp = /\\(?([0-9]{3})\\)?([ .-])?([0-9]{3})([ .-])?([0-9]{4})/g;\r\nconst match_phone = value => (\r\n    value.match(phoneRegexp) ? undefined : \"Phone does not match validation scheme (999) 999-9999\"\r\n);\r\n\r\n// parse\r\nconst normalizePhone = value => {\r\n    if (!value) return value;\r\n    const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n    if (onlyNums.length <= 3) return onlyNums;\r\n    if (onlyNums.length <= 7)\r\n        return `(${onlyNums.slice(0, 3)}) ${onlyNums.slice(3, 7)}`;\r\n    return `(${onlyNums.slice(0, 3)}) ${onlyNums.slice(3, 6)}-${onlyNums.slice(6, 10)}`;\r\n};\r\n\r\n// formatter\r\n//\r\n\r\n// animations\r\nconst delay = 600;\r\n\r\nconst WrappedField = ({ input, meta, placeholder, animationDelay }) => {\r\n    const name = input.name;\r\n    const { touched, error } = meta;\r\n    const invalid = error && touched;\r\n    let classes = `field field-${name}`;\r\n    if (invalid) classes += ' invalid';\r\n\r\n    return (\r\n        <Anime\r\n            in\r\n            duration={800}\r\n            appear\r\n            onEntering={{\r\n                opacity: [0, 1],\r\n                translateX: [-270, 0],\r\n                easing: 'easeOutElastic(1, 0.7)',\r\n                delay: delay + animationDelay\r\n            }}>\r\n            <div className={classes}>\r\n                <div className=\"control\">\r\n                    <input {...input} type=\"text\" placeholder={placeholder} />\r\n                    {invalid && <div className=\"error\"><span>{error}</span></div>}\r\n                    {/*<ErrorWithDelay name={name} delay={3000}>*/}\r\n                    {/*{error => <div className=\"error\"><span>{error}</span></div>}*/}\r\n                    {/*</ErrorWithDelay>*/}\r\n                </div>\r\n            </div>\r\n        </Anime>\r\n    )\r\n};\r\n\r\nWrappedField.propTypes = {\r\n    input: PropTypes.object,\r\n    meta: PropTypes.object\r\n};\r\n\r\n\r\nconst LoginForm = ({ next }) => {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    const onSubmit = async values => {\r\n        dispatch(showPreloader());\r\n\r\n        // trying fetch user\r\n        // try {\r\n        //     const response = await fetchUser(\r\n        //         values.email, values.instagram, values.phone\r\n        //     );\r\n        //     if (response.data.data.length) {\r\n        //         login(values);\r\n        //         history.push(next);\r\n        //         return Promise.resolve();\r\n        //     }\r\n        // } catch (error) {\r\n        //     console.log(error);\r\n        // }\r\n\r\n        // if no user, create it\r\n        return dispatch(loginUser(\r\n            values.email, values.instagram, values.phone\r\n        )).then(\r\n            ({value, action}) => {\r\n                if (action && action.type === LOGIN_FULFILLED) {\r\n                    login(value.data.id);\r\n                    history.push(next);\r\n                }\r\n            }, (error) => {});\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            render={({ handleSubmit, submitting, values }) => (\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-fields\">\r\n                        <Field name=\"email\"\r\n                               placeholder=\"Email\"\r\n                               animationDelay={0}\r\n                               component={WrappedField}\r\n                               validate={composeValidators(required, match_email)} />\r\n                        <Field name=\"instagram\"\r\n                               placeholder=\"Instagram handle\"\r\n                               animationDelay={100}\r\n                               component={WrappedField}\r\n                               validate={composeValidators(required, match_inst)} />\r\n                        <Field name=\"phone\"\r\n                               placeholder=\"(999) 999-9999\"\r\n                               animationDelay={200}\r\n                               component={WrappedField}\r\n                               validate={composeValidators(required, match_phone)}\r\n                               parse={normalizePhone} />\r\n                    </div>\r\n\r\n                    <div className=\"form-btn-wrap center-text\">\r\n                        <Anime\r\n                            in\r\n                            duration={1000}\r\n                            appear\r\n                            onEntering={{\r\n                                opacity: [0, 1],\r\n                                translateX: [270, 0],\r\n                                rotateX: [-180, 0],\r\n                                rotateY: [-210, 0],\r\n                                rotateZ: [-90, 0],\r\n                                delay: delay + 100,\r\n                                easing: 'easeOutElastic(1, .7)'\r\n                            }}>\r\n                            <button type=\"submit\" disabled={submitting} className=\"btn btn-green\">\r\n                                <span className=\"btn-text\">{\"deal\"}</span>\r\n                            </button>\r\n                        </Anime>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n    )\r\n};\r\n\r\nLoginForm.propTypes = {\r\n    next: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.object\r\n    ])\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Page from \"../components/Page\";\r\nimport LoginLabel from \"../components/LoginLabel\";\r\nimport LoginAwards from \"../components/LoginAwards\";\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport routes from \"../constants/routes\";\r\nimport { isAuthenticated } from \"../storage/auth\";\r\n\r\n\r\nconst LoginPage = (props) => {\r\n    const { from: { pathname: next = routes.home } = {} } = props.location.state || {};\r\n    return (\r\n        isAuthenticated() ?\r\n            <Redirect to={next}/>\r\n            :\r\n            <Page>\r\n                <React.Fragment>\r\n                    <LoginLabel name=\"frank michael smith's\" />\r\n\r\n                    <div className=\"form-wrapper\">\r\n                        <div className=\"container\">\r\n                            <LoginAwards title=\"5 card draw\" />\r\n\r\n                            <LoginForm next={next} />\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            </Page>\r\n    )\r\n};\r\n\r\nLoginPage.propTypes = {\r\n    location: PropTypes.object.isRequired\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Page from \"../components/Page\";\r\nimport { LOAD_CARDS_FULFILLED } from \"../constants/ActionTypes\";\r\nimport { showPreloader, hidePreloader, loadCards } from \"../actions\";\r\nimport routes from \"../constants/routes\";\r\n\r\n\r\nconst ThanksPage = () => {\r\n    const dispatch = useDispatch();\r\n    const { show } = useSelector(state => state.preloader);\r\n    const { ids: selected_ids } = useSelector(state => state.selectedCards);\r\n    const hasSelected = selected_ids.length;\r\n    let { cards } = useSelector(state => state.cards);\r\n    cards = cards.filter(card => selected_ids.includes(card.id));\r\n\r\n    useEffect(() => {\r\n        // в случае когда юзер заходит на сайт повторно после выбора карт\r\n        if (hasSelected && !cards.length) {\r\n            if (!show) {\r\n                dispatch(showPreloader());\r\n            }\r\n            dispatch(loadCards(selected_ids)).then(\r\n                ({value, action}) => {\r\n                    if (action && action.type === LOAD_CARDS_FULFILLED) {\r\n                        dispatch(hidePreloader());\r\n                    }\r\n                }, (error) => {});\r\n        } else {\r\n            if (show) {\r\n                dispatch(hidePreloader());\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    return (!hasSelected ? (\r\n        <Redirect to={routes.home} />\r\n    ) : (\r\n        <Page>\r\n            <div className=\"thanks-wrapper\">\r\n                <div className=\"container\">\r\n                    {cards.map(card => {\r\n                        return (\r\n                            <div className=\"card\" key={card.id}>\r\n                                <div className=\"card-image-wrapper\">\r\n                                    <img className=\"card-image\"\r\n                                         src={card.image_url}\r\n                                         alt={card.name} />\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    ));\r\n};\r\n\r\nexport default ThanksPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Provider } from \"react-redux\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Preloader from \"../components/Preloader\";\r\nimport PrivateRoute from \"../components/PrivateRoute\";\r\nimport MainPage from \"./MainPage\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport ThanksPage from \"./ThanksPage\";\r\nimport routes from \"../constants/routes\";\r\n\r\n\r\nconst Root = ({ store }) => (\r\n    <Provider store={store}>\r\n        <Switch>\r\n            <PrivateRoute exact path={routes.home} component={MainPage} />\r\n            <PrivateRoute path={routes.thanks} component={ThanksPage} />\r\n            <Route path={routes.login} render={LoginPage} />\r\n            <Route path=\"*\"><Redirect to={routes.home} /></Route>\r\n        </Switch>\r\n        <Preloader />\r\n    </Provider>\r\n);\r\n\r\nRoot.propTypes = {\r\n    store: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Root;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Root from \"./containers/Root\";\r\nimport store from \"./store\";\r\n\r\nimport \"css/vendor/normalize.css\";\r\nimport \"css/root.scss\";\r\n// import \"fonts/fonts\";\r\n\r\n\r\nrender(\r\n    <Router>\r\n        <Root store={store} />\r\n    </Router>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}