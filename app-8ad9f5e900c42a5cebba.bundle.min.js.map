{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/constants/defaults.js","webpack:///./src/js/utils.js","webpack:///./src/js/storage/base.js","webpack:///./src/js/storage/cards.js","webpack:///./src/js/constants/ActionTypes.js","webpack:///./src/js/reducers/preloader.js","webpack:///./src/js/reducers/user.js","webpack:///./src/js/reducers/content.js","webpack:///./src/js/reducers/fetchedCards.js","webpack:///./src/js/reducers/cards.js","webpack:///./src/js/reducers/selectedCards.js","webpack:///./src/js/reducers/index.js","webpack:///./src/js/store/index.js","webpack:///./src/js/renderer.js","webpack:///./src/js/api.js","webpack:///./src/js/store/store.prod.js","webpack:///./src/js/store/store.dev.js","webpack:///./src/js/components/Preloader.js","webpack:///./src/js/storage/auth.js","webpack:///./src/js/actions/index.js","webpack:///./src/js/constants/routes.js","webpack:///./src/js/components/PrivateRoute.js","webpack:///./src/js/components/Page.js","webpack:///./src/js/components/MainList.js","webpack:///./src/js/components/MainEmpty.js","webpack:///./src/js/containers/MainPage.js","webpack:///./src/js/components/SplitText.js","webpack:///./src/js/components/LoginLabel.js","webpack:///./src/img/preview2.png","webpack:///./src/js/components/LoginPreview.js","webpack:///./src/js/components/LoginForm.js","webpack:///./src/js/components/LoginBottom.js","webpack:///./src/js/containers/LoginPage.js","webpack:///./src/js/components/ThanksLabel.js","webpack:///./src/js/components/ThanksText.js","webpack:///./src/js/components/ThanksCards.js","webpack:///./src/js/containers/ThanksPage.js","webpack:///./src/js/containers/Root.js","webpack:///./src/js/app.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","CARDS_SHOW_COUNT","CARDS_SELECT_COUNT","TIME_ZONE","STORAGE_DATE_FORMAT","randomInteger","min","max","rand","Math","random","floor","getRandomIntList","count","rangeMin","rangeMax","new_int","includes","loadImage","path","Promise","resolve","img","Image","onload","status","onerror","src","loadImages","sources","Error","all","map","createMarkup","html","__html","trim","removeEmpty","obj","fromEntries","entries","filter","_","v","k","Store","STORE_KEY","_formatting","set","json","JSON","stringify","this","localStorage","setItem","getItem","parse","err","_isValid","getOrInvalidate","clear","removeItem","dayjs","extend","utc","timezone","now","tz","FetchedCards","constructor","date","format","fetchedCards","SelectedCards","selected_ids","ts","card_ids","selectedCards","SHOW_PRELOADER","HIDE_PRELOADER","LOAD_USER","LOAD_USER_PENDING","ActionType","Pending","LOAD_USER_FULFILLED","Fulfilled","LOAD_USER_REJECTED","Rejected","LOGIN","LOGIN_PENDING","LOGIN_FULFILLED","LOGIN_REJECTED","LOGOUT","LOAD_CONTENT","LOAD_CONTENT_PENDING","LOAD_CONTENT_FULFILLED","LOAD_CONTENT_REJECTED","LOAD_DAILY_PLAYERS","LOAD_DAILY_PLAYERS_PENDING","LOAD_DAILY_PLAYERS_FULFILLED","LOAD_DAILY_PLAYERS_REJECTED","LOAD_CARDS","LOAD_CARDS_PENDING","LOAD_CARDS_FULFILLED","LOAD_CARDS_REJECTED","SET_SELECTED_CARDS","SET_SELECTED_CARDS_PENDING","SET_SELECTED_CARDS_FULFILLED","SET_SELECTED_CARDS_REJECTED","initialState","show","isFetching","response","error","userReducer","state","action","type","ActionTypes","payload","login_label","login_text","login_consent","empty_page","cards_page_green","cards_page_gray","thanks_label","thanks_block_1","thanks_block_2","contentReducer","formattingContentResponse","ids","cards","cardsReducer","formattingCardsResponse","sort","a","b","indexOf","id","isSending","rootReducer","combineReducers","preloader","user","content","fetchedCardsIDs","formattedData","formattingDailyPlayersResponse","filtered_cards_ids","indexes","dp_ids","pd","card_id","selectedCardsIDs","meta","require","renderer","marked","Renderer","link","href","title","text","use","axiosAPI","axios","baseURL","timeout","headers","Authorization","accept","urls","daily","sets","users","records","fields","dp","Boolean","card","first_image","image_url","url","store","createStore","applyMiddleware","promise","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Preloader","props","useSelector","className","xmlns","viewBox","preserveAspectRatio","cx","cy","fill","stroke","strokeWidth","transform","attributeName","repeatCount","dur","calcMode","keyTimes","keySplines","values","begin","getUser","isAuthenticated","showPreloader","dispatch","getState","hidePreloader","logoutUser","loadCards","reject","join","params","filterByFormula","maxRecords","PrivateRoute","Component","component","rest","useDispatch","isUserAuthenticated","useEffect","userId","then","render","to","pathname","routes","from","location","propTypes","PropTypes","elementType","isRequired","Page","isPageLoaded","children","element","bool","defaultProps","animationClasses","enter","enterActive","enterDone","exit","exitActive","exitDone","MainList","useState","showCards","setShowCards","fetched_ids","lastChoiceIndex","setLastChoiceIndex","Array","choicedCards","setChoicedCards","isFullSet","classes","CSSTransition","in","classNames","unmountOnExit","onClick","currentSelectedCards","handlePersonClick","alt","dangerouslySetInnerHTML","event","bitmap","fetchedData","post","setCards","disabled","array","MainEmpty","duration","appear","onEntering","opacity","translateY","easing","MainPage","hasFetched","hasSelected","SplitText","letters","split","letter","onEnterAnimation","onExiting","onExitAnimation","string","number","LoginLabel","translateX","el","index","offsetLeft","delay","anime","stagger","LoginPreview","preview","composeValidators","validators","reduce","validator","undefined","required","emailRegexp","match_email","match","instRegexp","match_inst","phoneRegexp","match_phone","normalizePhone","onlyNums","replace","WrappedField","input","placeholder","animationDelay","touched","invalid","LoginForm","next","history","useHistory","onSubmit","Email","email","Instagram","instagram","Phone","phone","user_id","handleSubmit","submitting","validate","rotateX","rotateY","rotateZ","oneOfType","LoginBottom","LoginPage","Fragment","ThanksLabel","ThanksText","ThanksCards","start","ThanksPage","hasLoadedCards","Root","exact","document","getElementById"],"mappings":"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","file":"app-8ad9f5e900c42a5cebba.bundle.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([88,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export const CARDS_SHOW_COUNT = 5;\nexport const CARDS_SELECT_COUNT = 3;\n\nexport const TIME_ZONE = 'America/Los_Angeles';\nexport const QUERY_DATE_FORMAT = \"YYYY-MM-DD\";\nexport const STORAGE_DATE_FORMAT = \"YYYY-MM-DD\";\n","\n/**\n * Returns a random number between min (inclusive) and max (inclusive)\n */\nconst randomInteger = (min, max) => {\n    let rand = min + Math.random() * (max + 1 - min);\n    return Math.floor(rand);\n};\n\nexport const getRandomIntList = ({ count=5, rangeMin=0, rangeMax=100 }) => {\n    let result = [];\n\n    while (result.length < count) {\n        const new_int = randomInteger(rangeMin, rangeMax);\n        if (!result.includes(new_int)) result.push(new_int);\n    }\n\n    return result\n};\n\n\n/**\n * Async img loading\n */\nconst loadImage = path =>\n    new Promise(resolve => {\n        const img = new Image();\n        img.onload = () => resolve({path, status: 'ok'});\n        img.onerror = () => resolve({path, status: 'error'});\n\n        img.src = path;\n    });\n\nexport const loadImages = sources => {\n    if (!sources || !sources.length) {\n        throw new Error('sources required');\n    }\n    return Promise.all(sources.map(loadImage));\n};\n\nexport function createMarkup(html) {\n  return ({ __html: html.trim() })\n}\n\nexport function removeEmpty(obj) {\n  return Object.fromEntries(\n    Object.entries(obj)\n      .filter(([_, v]) => v != null)\n      .map(([k, v]) => [k, v === Object(v) ? removeEmpty(v) : v])\n  );\n}\n","\n/*\n    Базовый класс обёртки для storage.\n */\nexport const Store = function() {};\nStore.prototype.STORE_KEY = 'store_key';\n\n\n/*\n    Форматирование данных.\n */\nStore.prototype._formatting = function(data) {\n    return data;\n};\n\n\n/*\n    Сохранение в storage.\n */\nStore.prototype.set = function(data) {\n    const json = JSON.stringify(this._formatting(data));\n    localStorage.setItem(this.STORE_KEY, json);\n    return json;\n};\n\n\n/*\n    Получение данных из storage.\n */\nStore.prototype.get = function() {\n    let data;\n    const json = localStorage.getItem(this.STORE_KEY);\n    try {\n        data = JSON.parse(json);\n    } catch (err) {\n        data = null\n    }\n    return data;\n};\n\n/*\n    Инвалидация данных.\n */\nStore.prototype._isValid = function(data) {\n    return data\n};\n\n\n/*\n    Проверка на актуальность.\n */\nStore.prototype.getOrInvalidate = function() {\n     const data = this.get();\n    if (data) {\n        if (this._isValid(data)) {\n            return data;\n        } else {\n            this.clear();\n        }\n    }\n};\n\n\n/*\n    Удаление из storage.\n */\nStore.prototype.clear = function() {\n    localStorage.removeItem(this.STORE_KEY);\n};\n","import dayjs from \"dayjs\";\nimport utc from \"dayjs/plugin/utc\";\nimport timezone from \"dayjs/plugin/timezone\";\n\nimport { Store } from \"./base\";\nimport { STORAGE_DATE_FORMAT, TIME_ZONE } from \"../constants/defaults\";\n\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\n\nconst now = () => dayjs().tz(TIME_ZONE);\n\n\n// Класс который сохраняет предложенные пользователю карты.\nconst FetchedCards = function() {};\nFetchedCards.prototype = Object.create(Store.prototype);\nFetchedCards.prototype.constructor = Store;\n\nFetchedCards.prototype.STORE_KEY = 'fetched_cards';\n\nFetchedCards.prototype._formatting = function(data) {\n    return {\n        date: now().format(STORAGE_DATE_FORMAT),\n        ...data\n    };\n};\n\nFetchedCards.prototype._isValid = function(data) {\n    if (data.date === now().format(STORAGE_DATE_FORMAT)) {\n        return data;\n    }\n};\n\nexport const fetchedCards = new FetchedCards();\n\n\n// Класс который сохраняет выбранные пользователем карты.\nconst SelectedCards = function() {};\nSelectedCards.prototype = Object.create(Store.prototype);\nSelectedCards.prototype.constructor = Store;\n\nSelectedCards.prototype.STORE_KEY = 'selected_cards';\n\nSelectedCards.prototype._formatting = function({ selected_ids, ts }) {\n    const setDate = dayjs(ts).tz(TIME_ZONE);\n    return {\n        date: setDate.format(STORAGE_DATE_FORMAT),\n        card_ids: selected_ids,\n    };\n};\n\nSelectedCards.prototype._isValid = function(data) {\n    if (data.date === now().format(STORAGE_DATE_FORMAT)) {\n        return data;\n    }\n};\n\nexport const selectedCards = new SelectedCards();\n","import {ActionType} from 'redux-promise-middleware';\n\n\n// preloader\nexport const SHOW_PRELOADER = 'SHOW_PRELOADER';\nexport const HIDE_PRELOADER = 'HIDE_PRELOADER';\n\n// user\nexport const LOAD_USER = 'LOAD_USER';\nexport const LOAD_USER_PENDING = `LOAD_USER_${ActionType.Pending}`;\nexport const LOAD_USER_FULFILLED = `LOAD_USER_${ActionType.Fulfilled}`;\nexport const LOAD_USER_REJECTED = `LOAD_USER_${ActionType.Rejected}`;\n\nexport const LOGIN = 'LOGIN';\nexport const LOGIN_PENDING = `LOGIN_${ActionType.Pending}`;\nexport const LOGIN_FULFILLED = `LOGIN_${ActionType.Fulfilled}`;\nexport const LOGIN_REJECTED = `LOGIN_${ActionType.Rejected}`;\n\nexport const LOGOUT = 'LOGOUT';\n\n// content\nexport const LOAD_CONTENT = 'LOAD_CONTENT';\nexport const LOAD_CONTENT_PENDING = `LOAD_CONTENT_${ActionType.Pending}`;\nexport const LOAD_CONTENT_FULFILLED = `LOAD_CONTENT_${ActionType.Fulfilled}`;\nexport const LOAD_CONTENT_REJECTED = `LOAD_CONTENT_${ActionType.Rejected}`;\n\n// daily players\nexport const LOAD_DAILY_PLAYERS = 'LOAD_DAILY_PLAYERS';\nexport const LOAD_DAILY_PLAYERS_PENDING = `LOAD_DAILY_PLAYERS_${ActionType.Pending}`;\nexport const LOAD_DAILY_PLAYERS_FULFILLED = `LOAD_DAILY_PLAYERS_${ActionType.Fulfilled}`;\nexport const LOAD_DAILY_PLAYERS_REJECTED = `LOAD_DAILY_PLAYERS_${ActionType.Rejected}`;\n\n// cards\nexport const LOAD_CARDS = 'LOAD_CARDS';\nexport const LOAD_CARDS_PENDING = `LOAD_CARDS_${ActionType.Pending}`;\nexport const LOAD_CARDS_FULFILLED = `LOAD_CARDS_${ActionType.Fulfilled}`;\nexport const LOAD_CARDS_REJECTED = `LOAD_CARDS_${ActionType.Rejected}`;\n\n// set\nexport const SET_SELECTED_CARDS = 'SET_SELECTED_CARDS';\nexport const SET_SELECTED_CARDS_PENDING = `SET_SELECTED_CARDS_${ActionType.Pending}`;\nexport const SET_SELECTED_CARDS_FULFILLED = `SET_SELECTED_CARDS_${ActionType.Fulfilled}`;\nexport const SET_SELECTED_CARDS_REJECTED = `SET_SELECTED_CARDS_${ActionType.Rejected}`;\n\nexport const CLEAR_SELECTED_CARDS = 'CLEAR_SELECTED_CARDS';\n","import * as ActionTypes from \"../constants/ActionTypes\";\n\n\nconst initialState = {\n    show: false\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.SHOW_PRELOADER:\n            return { show: true };\n\n        case ActionTypes.HIDE_PRELOADER:\n            return { show: false };\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from \"../constants/ActionTypes\";\n\n\nconst initialState = {\n    isFetching: false,\n    response: null,\n    error: false\n};\n\nconst userReducer = (state = initialState, action) => {\n    switch (action.type) {\n        // load user\n        case ActionTypes.LOAD_USER_PENDING:\n            return {\n                ...state,\n                isFetching: true\n            };\n        case ActionTypes.LOAD_USER_REJECTED: {\n            const { data } = action.payload.response || {};\n            return {\n                ...state,\n                isFetching: false,\n                response: null,\n                // response: data, // TODO if need errors rendering\n                error: true\n            };\n        }\n        case ActionTypes.LOAD_USER_FULFILLED:\n            return {\n                ...state,\n                isFetching: false,\n                response: action.payload.data,\n                error: false\n            };\n\n        // create user\n        case ActionTypes.LOGIN_PENDING:\n            return {\n                ...state,\n                isFetching: true\n            };\n        case ActionTypes.LOGIN_REJECTED: {\n            const { data } = action.payload.response || {};\n            return {\n                ...state,\n                isFetching: false,\n                response: null,\n                // response: data, // TODO if need errors rendering\n                error: true\n            };\n        }\n        case ActionTypes.LOGIN_FULFILLED:\n            return {\n                ...state,\n                isFetching: false,\n                response: action.payload.data,\n                error: false\n            };\n\n        // logout\n        case ActionTypes.LOGOUT:\n            return {\n                isFetching: false,\n                response: null,\n                error: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default userReducer;\n","import * as ActionTypes from \"../constants/ActionTypes\";\nimport { formattingContentResponse } from \"../api\";\n\n\nconst initialState = {\n    login_label: 'frank michael smith\\'s',\n    login_text: 'Free to enter. Winner receives $20.\\n' +\n        'The top 5 receive shoutouts and tags!',\n    login_consent: 'By participating, you consent to receive recurring autodialed SMS/MMS promotional messages. No purchase required. Msg&data rates may apply. Reply HELP for help, or STOP to end.',\n    empty_page: 'Hey! The contests are either live or unavailable today. Look out for updates on Frank\\'s Instagram.',\n    cards_page_green: 'most total pts\\nscored wins',\n    cards_page_gray: 'select 3\\n&\\u00A0discard 2',\n    thanks_label: 'thanks for entering',\n    thanks_block_1: 'winner announced\\n' +\n        'on frank`s instagram\\n' +\n        'story after the game',\n    thanks_block_2: 'must be following\\n' +\n        '@SBD_PLAY \\n' +\n        'on instagram to win',\n    isFetching: false,\n    response: null,\n    error: false\n};\n\nconst contentReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.LOAD_CONTENT_PENDING:\n            return {\n                ...state,\n                isFetching: true\n            };\n        case ActionTypes.LOAD_CONTENT_REJECTED: {\n            const { data } = action.payload.response || {};\n            return {\n                ...state,\n                isFetching: false,\n                response: data,\n                error: true\n            };\n        }\n        case ActionTypes.LOAD_CONTENT_FULFILLED: {\n            const data = action.payload.data;\n            const result = formattingContentResponse(data);\n\n            return {\n                ...state,\n                ...result,\n                response: data,\n                isFetching: false,\n                error: false\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default contentReducer;\n","import * as ActionTypes from \"../constants/ActionTypes\";\nimport { formattingDailyPlayersResponse } from \"../api\";\nimport { getRandomIntList } from \"../utils\";\nimport { fetchedCards } from \"../storage/cards\";\nimport { CARDS_SHOW_COUNT } from \"../constants/defaults\";\n\n\nconst data = fetchedCards.getOrInvalidate();\nconst initialState = {\n    ids: data ? data.card_ids : [],\n    isFetching: false,\n    response: null,\n    error: false\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.LOAD_DAILY_PLAYERS_PENDING:\n            return {\n                ...state,\n                isFetching: true\n            };\n        case ActionTypes.LOAD_DAILY_PLAYERS_REJECTED: {\n            const { data } = action.payload.response || {};\n            return {\n                ...state,\n                isFetching: false,\n                response: data,\n                error: true\n            };\n        }\n        case ActionTypes.LOAD_DAILY_PLAYERS_FULFILLED: {\n            // полное говно, но отсюда удобнее всего сохранить в стораж\n            const formattedData = formattingDailyPlayersResponse(action.payload.data);\n\n            let filtered_cards_ids;\n            const count = formattedData.length;\n\n            if (count < CARDS_SHOW_COUNT) {\n                // случай захода на страницу во время заполнения таблицы\n                filtered_cards_ids = [];\n            } else {\n                const indexes = getRandomIntList({\n                    count: CARDS_SHOW_COUNT,\n                    rangeMin: 0,\n                    rangeMax: count - 1\n                });\n\n                const dp_ids = formattedData.map(pd => pd.id);\n                const cards_ids = formattedData.map(pd => pd.card_id);\n                filtered_cards_ids = cards_ids.filter((id, i) => indexes.includes(i));\n                fetchedCards.set({\n                    dp_ids: dp_ids.filter((id, i) => indexes.includes(i)),\n                    card_ids: filtered_cards_ids,\n                });\n            }\n\n            return {\n                ...state,\n                ids: filtered_cards_ids,\n                isFetching: false,\n                error: false\n            };\n        }\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from \"../constants/ActionTypes\";\nimport { formattingCardsResponse } from \"../api\";\nimport { fetchedCards } from \"../storage/cards\";\n\n\nconst initialState = {\n    cards: [],\n    isFetching: false,\n    response: null,\n    error: false\n};\n\nconst cardsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.LOAD_CARDS_PENDING:\n            return {\n                ...state,\n                isFetching: true\n            };\n        case ActionTypes.LOAD_CARDS_REJECTED: {\n            const { data } = action.payload.response || {};\n            return {\n                ...state,\n                isFetching: false,\n                response: data,\n                error: true\n            };\n        }\n        case ActionTypes.LOAD_CARDS_FULFILLED: {\n            const result = formattingCardsResponse(action.payload.data);\n\n            // sort according to daily players fetch\n            const data = fetchedCards.get();\n            if (data) {\n                const ids = data.card_ids;\n                result.sort((a, b) => {\n                    if (ids.indexOf(a.id) > ids.indexOf(b.id)) return 1;\n                    if (ids.indexOf(a.id) < ids.indexOf(b.id)) return -1;\n                });\n            }\n\n            return {\n                ...state,\n                isFetching: false,\n                cards: result,\n                error: false\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default cardsReducer;\n","import * as ActionTypes from \"../constants/ActionTypes\";\nimport { selectedCards } from \"../storage/cards\";\n\n\nconst data = selectedCards.getOrInvalidate();\nconst initialState = {\n    ids: data ? data.card_ids : [],\n    isSending: false,\n    response: null,\n    error: false\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.SET_SELECTED_CARDS_PENDING:\n            return {\n                ...state,\n                isSending: true\n            };\n        case ActionTypes.SET_SELECTED_CARDS_REJECTED: {\n            const { data } = action.payload.response || {};\n            return {\n                ...state,\n                isSending: false,\n                response: data,\n                error: true\n            };\n        }\n        case ActionTypes.SET_SELECTED_CARDS_FULFILLED:\n            return {\n                ...state,\n                isSending: false,\n                ids: action.meta.ids,\n                error: false\n            };\n        // case ActionTypes.CLEAR_SELECTED_CARDS:\n        //     return { ids: [] };\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from \"redux\";\nimport preloaderReducer from \"./preloader\";\nimport userReducer from \"./user\";\nimport contentReducer from \"./content\";\nimport fetchedCardsIDsReducer from \"./fetchedCards\";\nimport cardsReducer from \"./cards\";\nimport selectedCardsIDsReducer from \"./selectedCards\";\n\n\nconst rootReducer = combineReducers({\n    preloader: preloaderReducer,\n    user: userReducer,\n    content: contentReducer,\n    fetchedCardsIDs: fetchedCardsIDsReducer,\n    cards: cardsReducer,\n    selectedCardsIDs: selectedCardsIDsReducer\n});\n\nexport default rootReducer;\n","const environment = process.env.NODE_ENV;\n\nif (environment === 'production') {\n  module.exports = require('./store.prod')\n} else {\n  module.exports = require('./store.dev')\n}\n","import marked from \"marked\";\n\n\nconst renderer = new marked.Renderer();\n\n\nrenderer.link = (href, title, text) => {\n    return `<a class=\"link\" href=${href} target=\"_blank\" rel=\"noreferrer\" title=${title ? title : \"\"}>${text}</a>`;\n}\n\nexport default renderer;\n","import axios from \"axios\";\nimport marked from \"marked\";\n\nimport { removeEmpty } from \"./utils\";\nimport renderer from \"./renderer\";\n\n\nmarked.use({ renderer });\n\nconst environment = process.env.NODE_ENV;\n\nconst baseURL = (() => {\n    switch (environment) {\n        case 'test':\n            return '';\n        case 'development':\n            return 'https://api.airtable.com/v0/app9n7ewo4p9CrxlC/'; // my\n        default:\n            return 'https://api.airtable.com/v0/appLEgyLGr8Xpum8P/';\n    }\n})();\n\nexport const axiosAPI = axios.create({\n    baseURL: baseURL,\n    timeout: 5000,\n    headers: {\n        Authorization: `Bearer ${environment === 'development' ? \n                                'keyQcY7BJrFix6otc' : 'keyMZ0LJwZkwSeJuQ'}`, // dev is my\n        \"Content-Type\": \"application/json\",\n        accept: \"application/json\",\n    },\n});\n\n// 429 status code need retry\n// axiosAPI.interceptors.response.use(null, error => {\n//     const status = error.status || error.response.status;\n//     if (status === 401 || status === 403) {\n//         store.dispatch(logoutUser());\n//     }\n//     return Promise.reject(error);\n// });\n\n\nexport const urls = {\n    cards: 'Cards',\n    daily: 'Daily players',\n    sets: 'Sets',\n    users: 'Users',\n    content: 'Content',\n};\n\nexport const formattingContentResponse = (data) => {\n    const { records } = data;\n    if (!records.length) return\n\n    const { fields } = records[0];\n\n    return removeEmpty({\n        login_label: fields[\"login_label\"],\n        login_text: fields[\"login_text\"],\n        login_consent: fields[\"login_consent\"] && marked(fields[\"login_consent\"]),\n        empty_page: fields[\"empty_page\"] && marked(fields[\"empty_page\"]),\n        cards_page_green: fields[\"cards_page_green\"] && marked(fields[\"cards_page_green\"]),\n        cards_page_gray: fields[\"cards_page_gray\"] && marked(fields[\"cards_page_gray\"]),\n        thanks_label: fields[\"thanks_label\"],\n        thanks_block_1: fields[\"thanks_block_1\"] && marked(fields[\"thanks_block_1\"]),\n        thanks_block_2: fields[\"thanks_block_2\"] && marked(fields[\"thanks_block_2\"])\n    })\n};\n\nexport const formattingDailyPlayersResponse = (data) => {\n    const { records } = data;\n    if (!records.length) return [];\n\n    return records.filter(dp => Boolean(dp.fields[\"Player\"])).map(dp => {\n        const { fields } = dp;\n        return {\n            id: dp.id,\n            card_id: fields[\"Player\"][0]\n        }\n    });\n};\n\nexport const formattingCardsResponse = (data) => {\n    const { records } = data;\n    return records.map(card => {\n        const { fields } = card;\n        const first_image = fields[\"Card\"][0];\n        return {\n            id: card.id,\n            name: fields[\"Name\"],\n            image_url: first_image.url\n        }\n    });\n};\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport promise from \"redux-promise-middleware\";\nimport rootReducer from \"../reducers\";\n\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(\n        promise,\n        thunk\n    )\n);\n\nexport default store;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport promise from \"redux-promise-middleware\";\nimport rootReducer from \"../reducers\";\n\n\nconst composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            // options like actionSanitizer, stateSanitizer\n        }) : compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(\n            promise,\n            thunk\n        )\n    )\n);\n\nif (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers', () => {\n        store.replaceReducer(rootReducer)\n    })\n}\n\nexport default store;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\n\nconst ballColor = '#f47436';\nconst strokeColor = '#eeeeee';\n\nconst Preloader = (props) => {\n    const { show } = useSelector(state => state.preloader);\n    return (\n        show ?\n            <div className=\"preloader__wrapper\">\n                <div className=\"preloader\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\"\n                         className=\"preloader-ball\"\n                         viewBox=\"0 0 100 100\"\n                         preserveAspectRatio=\"xMidYMid\">\n\n                        <circle cx=\"50\" cy=\"50\" r=\"50.25\"\n                                fill={ballColor}\n                                stroke={strokeColor}\n                                strokeWidth=\"4.5\" />\n                        <path d=\"M50 0L50 100\"\n                              stroke={strokeColor}\n                              strokeWidth=\"4\" />\n                        <path d=\"M14.644660940672622 14.644660940672622 A50 50 0 0 1 14.644660940672622 85.35533905932738\"\n                              fill=\"none\"\n                              stroke={strokeColor}\n                              strokeWidth=\"4\" />\n                        <path d=\"M85.35533905932738 14.644660940672622 A50 50 0 0 0 85.35533905932738 85.35533905932738\"\n                              fill=\"none\"\n                              stroke={strokeColor}\n                              strokeWidth=\"4\" />\n\n                        <g transform=\"translate(0 50)\">\n                            <path d=\"M0 0A50 50 0 0 1 100 0\" fill=\"none\" stroke={strokeColor} strokeWidth=\"4\">\n                                <animate attributeName=\"d\"\n                                         repeatCount=\"indefinite\"\n                                         dur=\"1s\"\n                                         calcMode=\"spline\"\n                                         keyTimes=\"0;0.499999;0.5;1\"\n                                         keySplines=\"0.1 0 1 0.9;0.5 0.5 0.5 0.5;0 0.1 0.9 1\"\n                                         values=\"M0 0A50 50 0 0 1 100 0;M0 0A50 0 0 0 1 100 0;M0 0A50 0 0 0 0 100 0;M0 0A50 50 0 0 0 100 0\"\n                                         begin=\"0\" />\n                            </path>\n                            <path d=\"M0 0A50 50 0 0 1 100 0\" fill=\"none\" stroke={strokeColor} strokeWidth=\"4\">\n                                <animate attributeName=\"d\"\n                                         repeatCount=\"indefinite\"\n                                         dur=\"1s\"\n                                         calcMode=\"spline\"\n                                         keyTimes=\"0;0.499999;0.5;1\"\n                                         keySplines=\"0.1 0 1 0.9;0.5 0.5 0.5 0.5;0 0.1 0.9 1\"\n                                         values=\"M0 0A50 50 0 0 1 100 0;M0 0A50 0 0 0 1 100 0;M0 0A50 0 0 0 0 100 0;M0 0A50 50 0 0 0 100 0\"\n                                         begin=\"-0.5\" />\n                            </path>\n                        </g>\n                    </svg>\n                </div>\n            </div>\n            : null\n    )\n};\n\nexport default Preloader;\n","\nconst storeKey = 'user_id';\n\nexport const login = (user_id) => {\n    localStorage.setItem(storeKey, user_id);\n};\n\nexport const logout = function() {\n    localStorage.removeItem(storeKey);\n};\n\nexport const getUser = () => {\n    return localStorage.getItem(storeKey);\n};\n\nexport const isAuthenticated = () => {\n    const user = getUser();\n    return !!user;\n};\n","import dayjs from \"dayjs\";\nimport utc from \"dayjs/plugin/utc\";\n\nimport * as ActionTypes from \"../constants/ActionTypes\";\nimport { CARDS_SHOW_COUNT, QUERY_DATE_FORMAT, TIME_ZONE } from \"../constants/defaults\";\nimport { fetchedCards } from \"../storage/cards\";\n\nimport { axiosAPI, urls } from \"../api\";\nimport { getUser, logout } from \"../storage/auth\";\n\n\ndayjs.extend(utc);\n\n\n// preloader\nexport const showPreloader = () => (dispatch, getState) => {\n    const { show } = getState().preloader;\n\n    if (show) {\n        return null\n    }\n\n    return dispatch({\n        type: ActionTypes.SHOW_PRELOADER\n    })\n};\n\nexport const hidePreloader = () => (dispatch, getState) => {\n    const { show } = getState().preloader;\n\n    if (!show) {\n        return null\n    }\n\n    return dispatch({\n        type: ActionTypes.HIDE_PRELOADER\n    })\n};\n\n// user\nexport const loadUser = (userId) => (dispatch, getState) => {\n    const state = getState();\n    const user = state.user.response;\n\n    if (user) {\n        return Promise.resolve(user)\n    }\n\n    return dispatch({\n        type: ActionTypes.LOAD_USER,\n        payload: axiosAPI.get(`${urls.users}/${userId}`)\n    });\n};\n\nexport const loginUser = (Email, Instagram, Phone) => dispatch => {\n    const user = getUser();\n\n    if (user) {\n        return Promise.resolve(user)\n    }\n\n    return dispatch({\n        type: ActionTypes.LOGIN,\n        payload: axiosAPI.post(urls.users, {\n            fields: { Email, Instagram, Phone }\n        })\n    });\n};\n\nexport const logoutUser = () => dispatch => {\n    logout();\n\n    return dispatch({\n        type: ActionTypes.LOGOUT\n    });\n};\n\n\n// content\nexport const loadContent = () => (dispatch, getState) => {\n    const state = getState();\n    if (state.content.isFetching) {\n        return Promise.reject(null)\n    }\n\n    return dispatch({\n        type: ActionTypes.LOAD_CONTENT,\n        payload: axiosAPI.get(urls.content, {\n            maxRecords: 1\n        })\n    });\n};\n\n// daily players\nexport const loadDailyPlayers = () => (dispatch, getState) => {\n    const state = getState();\n    if (state.fetchedCardsIDs.isFetching) {\n        return Promise.reject(null)\n    }\n\n    const filter = `_active=1`;\n    // const filter = `Date=TODAY()`;\n    // const filter = `Date=NOW()`;\n    // const filter = `Date=SET_TIMEZONE(TODAY(),\"${TIME_ZONE}\")`;\n    // const filter = `Date=DATETIME_FORMAT(SET_TIMEZONE(TODAY(),\"${TIME_ZONE}\"), \"MM/DD/YYYY\")`;\n    // const filter = `Date=\"${dayjs.utc('2020-10-04').format(QUERY_DATE_FORMAT)}\"`;\n\n    return dispatch({\n        type: ActionTypes.LOAD_DAILY_PLAYERS,\n        payload: axiosAPI.get(urls.daily, {\n            params: {\n                filterByFormula: filter,\n                // maxRecords: 100              TODO pagination\n            }\n        })\n    });\n};\n\n// cards\nexport const loadCards = (ids) => (dispatch, getState) => {\n    const state = getState();\n    if (state.cards.isFetching || !ids) {\n        return Promise.reject(null)\n    }\n\n    const operands = ids.map(value => `RECORD_ID()='${value}'`);\n    const filter = `OR(${operands.join(',')})`;\n\n    return dispatch({\n        type: ActionTypes.LOAD_CARDS,\n        payload: axiosAPI.get(urls.cards, {\n            params: {\n                filterByFormula: filter,\n                maxRecords: CARDS_SHOW_COUNT\n            }\n        })\n    });\n};\n\n// user set\nexport const setCards = (selected_ids, bitmap) => (dispatch, getState) => {\n    const state = getState();\n    if (state.selectedCardsIDs.isSending) {\n        return Promise.reject(null)\n    }\n\n    const user = getUser();\n    if (!user) {\n        return Promise.reject(null);\n    }\n\n    const fetchedData = fetchedCards.get();\n    if (!fetchedData) {\n        return Promise.reject(null);\n    }\n\n    return dispatch({\n        type: ActionTypes.SET_SELECTED_CARDS,\n        payload: axiosAPI.post(urls.sets, {\n            fields: {\n                'User': [user], // API require array\n                'Players_m2m': fetchedData.dp_ids.filter((id, i) => bitmap[i])\n            }\n        }),\n        meta: {\n            ids: selected_ids\n        }\n    });\n};\n","import { include } from \"named-urls\";\n\n\nexport default {\n   home: '/',\n   login: '/login',\n   thanks: '/thanks'\n};\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nimport { showPreloader, loadUser, logoutUser } from \"../actions\";\nimport { getUser, isAuthenticated as isUserAuthenticated } from \"../storage/auth\";\nimport routes from \"../constants/routes\";\n\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    const dispatch = useDispatch();\n    const { response: user } = useSelector(state => state.user);\n    const { error } = useSelector(state => state.user);\n    const isAuthenticated = isUserAuthenticated();\n\n    useEffect(() => {\n        if (isAuthenticated && !user) {\n            dispatch(showPreloader());\n            dispatch(\n                loadUser(getUser())\n            ).then(\n                (result) => {\n\n                },\n                (error) => {\n                    // if the user has been removed from airtables\n                    dispatch(logoutUser());\n                }\n            );\n        }\n    }, []);\n\n    return (\n        <Route\n            {...rest}\n            render={props => {\n                return (\n                    !isAuthenticated ? (\n                        <Redirect to={{\n                            pathname: routes.login,\n                            state: {from: props.location}\n                        }}/>\n                    ) : (user && !error) ? (\n                        <Component {...props}/>\n                    ) : null\n                );\n            }}\n        />\n    );\n};\n\nPrivateRoute.propTypes = {\n    component: PropTypes.elementType.isRequired\n};\n\nexport default PrivateRoute;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { showPreloader, hidePreloader, loadContent } from \"../actions\";\n\n\nconst Page = (props) => {\n    const dispatch = useDispatch();\n    const content = useSelector(state => state.content);\n\n    useEffect(() => {\n        if (!content.response) {\n            dispatch(showPreloader());\n            dispatch(\n                loadContent()\n            ).then(() => {\n                if (props.isPageLoaded) {\n                    dispatch(hidePreloader());\n                }\n            });\n        }\n    }, []);\n\n    return (\n        <div id=\"app-page\">\n            <main id=\"app-main\">\n                {content.isFetching || !content.response ? null : props.children}\n            </main>\n        </div>\n    );\n};\n\nPage.propTypes = {\n    children: PropTypes.element.isRequired,\n    isPageLoaded: PropTypes.bool\n};\n\nPage.defaultProps = {\n  isPageLoaded: true\n};\n\nexport default Page;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport { LOAD_CARDS_FULFILLED, SET_SELECTED_CARDS_FULFILLED } from \"../constants/ActionTypes\";\nimport { CARDS_SHOW_COUNT, CARDS_SELECT_COUNT } from \"../constants/defaults\";\nimport { showPreloader, hidePreloader, loadCards, setCards } from \"../actions\";\nimport { fetchedCards, selectedCards } from \"../storage/cards\";\nimport { formattingCardsResponse } from \"../api\";\nimport { createMarkup, loadImages } from \"../utils\";\n\n\nconst appearAnimationDuration = 2000;\nconst animationClasses = {\n    enter: 'enter',\n    enterActive: 'active-enter',\n    enterDone: 'done-enter',\n    exit: 'exit',\n    exitActive: 'active-exit',\n    exitDone: 'done-exit',\n};\n\nconst MainList = (props) => {\n    const dispatch = useDispatch();\n    const content = useSelector(state => state.content);\n    const { cards } = useSelector(store => store.cards);\n    const [showCards, setShowCards] = useState(false);\n\n    useEffect(() => {\n        dispatch(showPreloader());\n        dispatch(\n            loadCards(props.fetched_ids)\n        ).then(\n            ({value, action}) => {\n                if (action && action.type === LOAD_CARDS_FULFILLED) {\n                    const cards = formattingCardsResponse(value.data);\n                    return loadImages(cards.map(card => card.image_url))\n                }\n            }, (error) => {}\n        ).then(() => {\n            dispatch(hidePreloader());\n            setShowCards(true);\n        });\n    }, []);\n\n    const [lastChoiceIndex, setLastChoiceIndex] = useState(null);\n    const [choicedCards, setChoicedCards] = useState(Array(CARDS_SHOW_COUNT).fill(0));\n\n    const isFullSet = () => choicedCards.filter(Boolean).length === CARDS_SELECT_COUNT;\n\n    const handlePersonClick = (i) => {\n        const currentSelectedCards = choicedCards.slice();\n        if (currentSelectedCards[i]) {\n            currentSelectedCards[i] = 0\n        } else {\n            if (isFullSet()) currentSelectedCards[lastChoiceIndex] = 0;\n            currentSelectedCards[i] = 1\n        }\n        setLastChoiceIndex(i);\n        setChoicedCards(currentSelectedCards);\n    };\n\n    const handleEnterClick = (event) => {\n        // setShowCards(false);\n        // on exit callback CSS transition\n        dispatch(showPreloader());\n\n        const cards_ids = cards.map(card => card.id);\n        const selected_ids = cards_ids.filter((id, i) => choicedCards[i]);\n        dispatch(setCards(selected_ids, choicedCards.slice())).then(\n            ({value, action}) => {\n                if (action && action.type === SET_SELECTED_CARDS_FULFILLED) {\n                    selectedCards.set({\n                        selected_ids,\n                        ts: value.data.fields[\"Date\"]\n                    });\n                    fetchedCards.clear();\n                }\n            }, (error) => {});\n    };\n\n    if (!cards.length) return null;\n\n    return (\n        <div className=\"list\">\n            {cards.map((card, i) => {\n                let classes = 'card';\n                if (choicedCards[i]) classes += ' selected';\n                else if (isFullSet()) classes += ' skipped';\n\n                return (\n                    <CSSTransition\n                        in={showCards}\n                        timeout={appearAnimationDuration}\n                        classNames={animationClasses}\n                        key={card.id}\n                        unmountOnExit>\n                        <div className=\"list-item\">\n                            <div className={classes} onClick={() => handlePersonClick(i)}>\n                                <div className=\"card-image-wrapper\">\n                                    <img className=\"card-image\"\n                                         src={card.image_url}\n                                         alt={card.name} />\n                                </div>\n                            </div>\n                        </div>\n                    </CSSTransition>\n                )\n            })}\n\n            <CSSTransition\n                in={showCards}\n                timeout={appearAnimationDuration}\n                key=\"button\"\n                classNames={animationClasses}\n                unmountOnExit>\n                <div className=\"list-item\">\n                    <div className=\"rules\">\n                        <div className=\"rule-1\"\n                             dangerouslySetInnerHTML={createMarkup(content.cards_page_green)} />\n                        <div className=\"rule-2\"\n                             dangerouslySetInnerHTML={createMarkup(content.cards_page_gray)} />\n                    </div>\n                    <div className=\"button-wrapper\">\n                        <button type=\"button\"\n                                className=\"btn btn-green\"\n                                onClick={handleEnterClick}\n                                disabled={!isFullSet()}>\n                            <span className=\"btn-text\">{\"enter\"}</span>\n                        </button>\n                    </div>\n                </div>\n            </CSSTransition>\n        </div>\n    );\n};\n\nMainList.propTypes = {\n    fetched_ids: PropTypes.array.isRequired\n};\n\nexport default MainList;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Anime from \"@mollycule/react-anime\";\n\n\nimport { createMarkup } from \"../utils\";\n\n\nconst MainEmpty = () => {\n    const content = useSelector(state => state.content);\n\n    return (\n        <Anime\n            in\n            duration={800}\n            appear\n            onEntering={{\n                opacity: [0, 1],\n                translateY: [220, 0],\n                easing: \"easeInOutSine\"\n            }}>\n\n            <div className=\"empty-label text-markdown\"\n                 dangerouslySetInnerHTML={createMarkup(content.empty_page)} />\n        </Anime>\n    )\n};\n\nexport default MainEmpty;\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Page from \"../components/Page\";\nimport MainList from \"../components/MainList\";\nimport MainEmpty from \"../components/MainEmpty\";\nimport { CARDS_SHOW_COUNT } from \"../constants/defaults\";\nimport { showPreloader, hidePreloader, loadDailyPlayers } from \"../actions\";\nimport { LOAD_DAILY_PLAYERS_FULFILLED } from \"../constants/ActionTypes\";\nimport { formattingDailyPlayersResponse } from \"../api\";\nimport routes from \"../constants/routes\";\n\n\nconst MainPage = () => {\n    const dispatch = useDispatch();\n    const { ids: fetched_ids, isFetching } = useSelector(state => state.fetchedCardsIDs);\n    const { ids: selected_ids } = useSelector(state => state.selectedCardsIDs);\n    const hasFetched = Boolean(fetched_ids.length);\n    const hasSelected = Boolean(selected_ids.length);\n\n    useEffect(() => {\n        if (!hasSelected && !hasFetched) {\n            dispatch(showPreloader());\n            dispatch(\n                loadDailyPlayers()\n            ).then(\n                ({ value, action }) => {\n                    if (action && action.type === LOAD_DAILY_PLAYERS_FULFILLED) {\n                        const formattedData = formattingDailyPlayersResponse(value.data);\n                        const count = formattedData.length;\n\n                        if (count < CARDS_SHOW_COUNT) {\n                            // случай захода на страницу во время заполнения таблицы\n                            dispatch(hidePreloader());\n                            return Promise.resolve(null);\n                        }\n                    }\n                }, (error) => {}\n            );\n        }\n    }, []);\n\n    return (\n        hasSelected ?\n            <Redirect to={routes.thanks} />\n            :\n            <Page isPageLoaded={hasFetched}>\n                <div className=\"cards-wrapper\">\n                    <div className=\"container\">\n                        {hasFetched ?\n                            <MainList fetched_ids={fetched_ids} />\n                            : isFetching ? null\n                            : <MainEmpty />}\n                    </div>\n                </div>\n            </Page>\n    );\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Anime from \"@mollycule/react-anime\";\n\n\nconst SplitText = (props) => {\n    const letters = props.text.split('').map(\n        (letter, i) => <span key={i + letter} className=\"letter\">{letter}</span>\n    );\n\n    return (\n        <div className=\"letters\">\n            <Anime\n                in\n                duration={props.duration}\n                appear\n                onEntering={props.onEnterAnimation}\n                onExiting={props.onExitAnimation}>\n                {letters}\n            </Anime>\n        </div>\n    )\n};\n\nSplitText.propTypes = {\n    text: PropTypes.string,\n    duration: PropTypes.number,\n    onEnterAnimation: PropTypes.object,\n    onExitAnimation: PropTypes.object\n};\n\nexport default SplitText;\n","import anime from \"animejs\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport SplitText from \"./SplitText\";\n\n\nconst LoginLabel = () => {\n    const content = useSelector(state => state.content);\n\n    return (\n        <div className=\"head-label-wrapper\">\n            <div className=\"container\">\n                <div className=\"head-label center-text\">\n                    <SplitText\n                        text={content.login_label}\n                        duration={650}\n                        onEnterAnimation={{\n                            opacity: [0, 1],\n                            translateX: function(el, index) {\n                                return [-1 * el.offsetLeft, 0];\n                            },\n                            delay: anime.stagger(50),\n                            easing: \"easeOutQuint\"\n                        }} />\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default LoginLabel;\n","export default __webpack_public_path__ + \"images/preview2.png\";","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n// import anime from \"animejs\";\nimport Anime from \"@mollycule/react-anime\";\n\n// import SplitText from \"./SplitText\";\nimport preview from \"img/preview2.png\";\n\n\nconst delay = 600;\n\nconst LoginPreview = () => {\n    const content = useSelector(state => state.content);\n\n    return (\n        <div className=\"login-preview-wrapper\">\n            <Anime\n                in\n                duration={1200}\n                appear\n                onEntering={{\n                    opacity: [0, 1],\n                    delay: delay,\n                    easing: \"easeOutExpo\"\n                }}>\n                <div className=\"login-preview\">\n                    <img className=\"login-preview-img\" src={preview} alt=\"preview\"/>\n                </div>\n            </Anime>\n\n            <Anime\n                in\n                duration={800}\n                appear\n                onEntering={{\n                    opacity: [0, 1],\n                    translateX: [270, 0],\n                    delay: delay\n                }}>\n                <div className=\"login-preview-label center-text\">\n                    {content.login_text}\n                </div>\n            </Anime>\n        </div>\n    )\n};\n\nexport default LoginPreview;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Field } from \"react-final-form\";\nimport PropTypes from \"prop-types\";\nimport Anime from \"@mollycule/react-anime\";\n\nimport { LOGIN_FULFILLED } from \"../constants/ActionTypes\";\n// import ErrorWithDelay from \"./ErrorWithDelay\";\nimport { loginUser, showPreloader } from \"../actions\";\nimport { login } from \"../storage/auth\";\n// import { fetchUser } from \"../api\";\n\n\n// validation\nconst composeValidators = (...validators) => value =>\n    validators.reduce((error, validator) => error || validator(value), undefined);\n\nconst required = value => (value ? undefined : \"Required\");\n\nconst emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/igm;\nconst match_email = value => (\n    value.match(emailRegexp) ? undefined : 'Email does not match validation scheme \"my@mail.com\"'\n);\n\nconst instRegexp = /^(?!.*\\.\\.)(?!.*\\.$)[^\\W][\\w.]{0,29}$/igm;\nconst match_inst = value => (\n    value.match(instRegexp) ? undefined : \"Your name Instagram is incorrect\"\n);\n\nconst phoneRegexp = /\\(?([0-9]{3})\\)?([ .-])?([0-9]{3})([ .-])?([0-9]{4})/g;\nconst match_phone = value => (\n    value.match(phoneRegexp) ? undefined : \"Phone does not match validation scheme (999) 999-9999\"\n);\n\n// parse\nconst normalizePhone = value => {\n    if (!value) return value;\n    const onlyNums = value.replace(/[^\\d]/g, \"\");\n    if (onlyNums.length <= 3) return onlyNums;\n    if (onlyNums.length <= 7)\n        return `(${onlyNums.slice(0, 3)}) ${onlyNums.slice(3, 7)}`;\n    return `(${onlyNums.slice(0, 3)}) ${onlyNums.slice(3, 6)}-${onlyNums.slice(6, 10)}`;\n};\n\n// formatter\n//\n\n// animations\nconst delay = 600;\n\nconst WrappedField = ({ input, meta, placeholder, animationDelay }) => {\n    const name = input.name;\n    const { touched, error } = meta;\n    const invalid = error && touched;\n    let classes = `field field-${name}`;\n    if (invalid) classes += ' invalid';\n\n    return (\n        <Anime\n            in\n            duration={800}\n            appear\n            onEntering={{\n                opacity: [0, 1],\n                translateX: [-270, 0],\n                easing: 'easeOutElastic(1, 0.7)',\n                delay: delay + animationDelay\n            }}>\n            <div className={classes}>\n                <div className=\"control\">\n                    <input {...input} type=\"text\" placeholder={placeholder} />\n                    {invalid && <div className=\"error\"><span>{error}</span></div>}\n                    {/*<ErrorWithDelay name={name} delay={3000}>*/}\n                    {/*{error => <div className=\"error\"><span>{error}</span></div>}*/}\n                    {/*</ErrorWithDelay>*/}\n                </div>\n            </div>\n        </Anime>\n    )\n};\n\nWrappedField.propTypes = {\n    input: PropTypes.object,\n    meta: PropTypes.object\n};\n\n\nconst LoginForm = ({ next }) => {\n    const dispatch = useDispatch();\n    let history = useHistory();\n\n    const onSubmit = async values => {\n        dispatch(showPreloader());\n\n        // trying fetch user\n        // try {\n        //     const response = await fetchUser(\n        //         values.email, values.instagram, values.phone\n        //     );\n        //     if (response.data.data.length) {\n        //         login(values);\n        //         history.push(next);\n        //         return Promise.resolve();\n        //     }\n        // } catch (error) {\n        //     console.log(error);\n        // }\n\n        // if no user, create it\n        return dispatch(loginUser(\n            values.email, values.instagram, values.phone\n        )).then(\n            ({value, action}) => {\n                if (action && action.type === LOGIN_FULFILLED) {\n                    login(value.data.id);\n                    history.push(next);\n                }\n            }, (error) => {});\n    };\n\n    return (\n        <Form\n            onSubmit={onSubmit}\n            render={({ handleSubmit, submitting, values }) => (\n                <form className=\"login-form\" onSubmit={handleSubmit}>\n                    <div className=\"form-fields\">\n                        <Field name=\"email\"\n                               placeholder=\"Email\"\n                               animationDelay={0}\n                               component={WrappedField}\n                               validate={composeValidators(required, match_email)} />\n                        <Field name=\"instagram\"\n                               placeholder=\"Instagram handle\"\n                               animationDelay={100}\n                               component={WrappedField}\n                               validate={composeValidators(required, match_inst)} />\n                        <Field name=\"phone\"\n                               placeholder=\"(999) 999-9999\"\n                               animationDelay={200}\n                               component={WrappedField}\n                               validate={composeValidators(required, match_phone)}\n                               parse={normalizePhone} />\n                    </div>\n\n                    <div className=\"form-btn-wrap center-text\">\n                        <Anime\n                            in\n                            duration={1000}\n                            appear\n                            onEntering={{\n                                opacity: [0, 1],\n                                translateX: [270, 0],\n                                rotateX: [-180, 0],\n                                rotateY: [-210, 0],\n                                rotateZ: [-90, 0],\n                                delay: delay + 100,\n                                easing: 'easeOutElastic(1, .7)'\n                            }}>\n                            <button type=\"submit\" disabled={submitting} className=\"btn btn-green\">\n                                <span className=\"btn-text\">{\"deal\"}</span>\n                            </button>\n                        </Anime>\n                    </div>\n                </form>\n            )}\n        />\n    )\n};\n\nLoginForm.propTypes = {\n    next: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object\n    ])\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n// import anime from \"animejs\";\nimport Anime from \"@mollycule/react-anime\";\n\nimport { createMarkup } from \"../utils\";\n\n\nconst delay = 1000;\n\nconst LoginBottom = () => {\n    const content = useSelector(state => state.content);\n\n    return (\n        <div className=\"login-bottom-wrapper\">\n            <Anime\n                in\n                duration={1200}\n                appear\n                onEntering={{\n                    opacity: [0, 1],\n                    delay: delay,\n                    easing: \"easeOutExpo\"\n                }}>\n                <div className=\"login-consent center-text\"\n                     dangerouslySetInnerHTML={createMarkup(content.login_consent)} />\n            </Anime>\n        </div>\n    )\n};\n\nexport default LoginBottom;\n","import React from \"react\";\nimport { Redirect } from \"react-router\";\nimport PropTypes from \"prop-types\";\n\nimport Page from \"../components/Page\";\nimport LoginLabel from \"../components/LoginLabel\";\nimport LoginPreview from \"../components/LoginPreview\";\nimport LoginForm from \"../components/LoginForm\";\nimport LoginBottom from \"../components/LoginBottom\";\nimport routes from \"../constants/routes\";\nimport { isAuthenticated } from \"../storage/auth\";\n\n\nconst LoginPage = (props) => {\n    const { from: { pathname: next = routes.home } = {} } = props.location.state || {};\n\n    return (\n        isAuthenticated() ?\n            <Redirect to={next}/>\n            :\n            <Page>\n                <React.Fragment>\n                    <LoginLabel />\n\n                    <div className=\"login-form-wrapper\">\n                        <div className=\"container\">\n                            <LoginPreview />\n                            <LoginForm next={next} />\n                            <LoginBottom />\n                        </div>\n                    </div>\n                </React.Fragment>\n            </Page>\n    )\n};\n\nLoginPage.propTypes = {\n    location: PropTypes.object.isRequired\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport anime from \"animejs\";\n\nimport SplitText from \"./SplitText\";\n\n\nconst ThanksLabel = ({ title }) => {\n    return (\n        <div className=\"thanks-label center-text\">\n            <SplitText\n                text={title}\n                duration={650}\n                onEnterAnimation={{\n                    opacity: [0, 1],\n                    translateX: function(el, index) {\n                        return [-1 * el.offsetLeft, 0];\n                    },\n                    delay: anime.stagger(50),\n                    easing: \"easeOutQuint\"\n                }} />\n        </div>\n    )\n};\n\nexport default ThanksLabel;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Anime from \"@mollycule/react-anime\";\n\n\nconst ThanksText = (props) => {\n    return (\n        <Anime\n            in\n            duration={800}\n            appear\n            onEntering={{\n                opacity: [0, 1],\n                translateX: [-270, 0],\n                delay: props.delay,\n                easing: \"easeOutExpo\"\n            }}>\n            <div className=\"thanks-text-block\">\n                {props.children}\n            </div>\n        </Anime>\n    )\n};\n\nThanksText.propTypes = {\n    children: PropTypes.element.isRequired,\n    delay: PropTypes.number\n};\n\nexport default ThanksText;\n","import React from \"react\";\nimport anime from \"animejs\";\nimport Anime from \"@mollycule/react-anime\";\n\n\nconst ThanksCards = ({ cards }) => {\n    return (\n        <div className=\"selected-cards\">\n            <Anime\n                in\n                duration={1400}\n                appear\n                onEntering={{\n                    opacity: [0, 1],\n                    delay: anime.stagger(100, {start: 1000}),\n                    easing: \"easeOutSine\"\n                }}>\n                {cards.map(card => {\n                    return (\n                        <div className=\"selected-card\" key={card.id}>\n                            <div className=\"card-image-wrapper\">\n                                <img className=\"card-image\"\n                                     src={card.image_url}\n                                     alt={card.name} />\n                            </div>\n                        </div>\n                    )\n                })}\n            </Anime>\n        </div>\n    )\n};\n\nexport default ThanksCards;\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Page from \"../components/Page\";\nimport ThanksLabel from \"../components/ThanksLabel\";\nimport ThanksText from \"../components/ThanksText\";\nimport ThanksCards from \"../components/ThanksCards\";\nimport { LOAD_CARDS_FULFILLED } from \"../constants/ActionTypes\";\nimport { showPreloader, hidePreloader, loadCards } from \"../actions\";\nimport { formattingCardsResponse } from \"../api\";\nimport { createMarkup, loadImages } from \"../utils\";\nimport routes from \"../constants/routes\";\n\n\nconst ThanksPage = () => {\n    const dispatch = useDispatch();\n    const content = useSelector(state => state.content);\n    const { ids: selected_ids } = useSelector(state => state.selectedCardsIDs);\n    let { cards } = useSelector(state => state.cards);\n    cards = cards.filter(card => selected_ids.includes(card.id));\n    const hasSelected = Boolean(selected_ids.length);\n    const hasLoadedCards = Boolean(cards.length);\n\n    useEffect(() => {\n        // запрос за картами в случае когда юзер заходит на сайт повторно после выбора карт\n        if (hasSelected && !hasLoadedCards) {\n            dispatch(showPreloader());\n            dispatch(\n                loadCards(selected_ids)\n            ).then(\n                ({value, action}) => {\n                    if (action && action.type === LOAD_CARDS_FULFILLED) {\n                        const cards = formattingCardsResponse(value.data);\n                        return loadImages(cards.map(card => card.image_url))\n                    }\n                }, (error) => {}\n            ).then(() => {\n                dispatch(hidePreloader());\n            });\n        } else {\n            dispatch(hidePreloader());\n        }\n    }, []);\n\n    return (!hasSelected ? (\n        <Redirect to={routes.home} />\n    ) : (\n        <Page isPageLoaded={hasLoadedCards}>\n            <div className=\"thanks-wrapper\">\n                <div className=\"container\">\n                    <ThanksLabel title={content.thanks_label} />\n\n                    <ThanksText delay={700}>\n                        <div className=\"text-markdown\"\n                             dangerouslySetInnerHTML={createMarkup(content.thanks_block_1)} />\n                    </ThanksText>\n\n                    <ThanksText delay={800}>\n                        <div className=\"text-markdown\"\n                             dangerouslySetInnerHTML={createMarkup(content.thanks_block_2)} />\n                    </ThanksText>\n\n                    {cards.length && <ThanksCards cards={cards} />}\n                </div>\n            </div>\n        </Page>\n    ));\n};\n\nexport default ThanksPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Provider } from \"react-redux\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Preloader from \"../components/Preloader\";\nimport PrivateRoute from \"../components/PrivateRoute\";\nimport MainPage from \"./MainPage\";\nimport LoginPage from \"./LoginPage\";\nimport ThanksPage from \"./ThanksPage\";\nimport routes from \"../constants/routes\";\n\n\nconst Root = ({ store }) => (\n    <Provider store={store}>\n        <Switch>\n            <PrivateRoute exact path={routes.home} component={MainPage} />\n            <PrivateRoute path={routes.thanks} component={ThanksPage} />\n            <Route path={routes.login} render={LoginPage} />\n            <Route path=\"*\"><Redirect to={routes.home} /></Route>\n        </Switch>\n        <Preloader />\n    </Provider>\n);\n\nRoot.propTypes = {\n    store: PropTypes.object.isRequired,\n};\n\nexport default Root;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Root from \"./containers/Root\";\nimport store from \"./store\";\n\nimport \"css/vendor/normalize.css\";\nimport \"css/root.scss\";\n// import \"fonts/fonts\";\n\n\nrender(\n    <Router>\n        <Root store={store} />\n    </Router>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}